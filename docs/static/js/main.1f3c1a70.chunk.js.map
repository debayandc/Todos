{"version":3,"sources":["actions/index.js","constants/filters.js","utils/getFilteredTodos.js","components/Hamburger.js","components/AddTodo.js","components/Todo.js","components/Checkbox.js","components/EditTodo.js","components/Filters.js","components/filterList.js","components/TodoList.js","utils/itemsCalc.js","components/HowToUse.js","components/SidebarList.js","components/Sidebar.js","App.js","utils/classList.js","reducer/todos.js","reducer/filter.js","reducer/index.js","localStorage.js","serviceWorker.js","index.js"],"names":["editTodo","id","text","type","update","toggleCompleted","filters","getFilteredTodos","todos","filter","filteredTodos","t","completed","Error","Hamburger","onClick","className","connect","state","input","dispatch","getSidebarval","showSidebar","count","getHowToUse","showHowToUse","useState","showBar","setshowBar","undefined","length","e","preventDefault","map","todo","editing","style","opacity","toggleShowSidebar","height","onSubmit","event","value","trim","addTodo","handleSubmit","for","class","autoComplete","required","placeholder","ref","node","Todo","onDoubleClick","textDecoration","fontStyle","Checkbox","checked","Fragment","defaultValue","autoFocus","onBlur","props","active","children","disabled","FilterList","toggleTodo","deleteTodo","completedCount","incompletedCount","overallCompletedCount","overallIncompletedCount","handleClick","overflow","draggable","key","itemsCalc","HowToUse","handleSidebarnav","hideHowToUse","display","flexDirection","flexBasis","justifyContent","fontSize","fontWeight","color","padding","cursor","SidebarList","showHowToUsePage","setshowHowToUsePage","Sidebar","selected","source","destination","App","setState","handleDragStart","target","dataTransfer","setData","dropEffect","data","d","Object","assign","splice","Number","dragAction","onDragEnter","parentElement","classList","contains","add","onDragLeave","stopPropagation","remove","handleDragOver","i","notDroppableClassList","onDragEnd","listItems","document","querySelectorAll","forEach","call","item","handleShowHowToUse","onClickOpenSidebar","this","onDragStart","onDragOver","Component","index","method","object","reorderIds","action","stateNew","newState","newdata","newS","combineReducers","saveState","serialState","JSON","stringify","localStorage","setItem","err","console","log","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","persistedState","getItem","parse","loadState","store","createStore","rootReducer","composeWithDevTools","subscribe","getState","throttle","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.1f3c1a70.chunk.js","sourcesContent":["export const addTodo = (id, text) => ({\n    type: 'ADD_TODO',\n    id,\n    text\n})\n\nexport const editTodo = (id, text) => ({\n    type: \"EDIT_TODO\",\n    id,\n    text\n})\n\nexport const update = (id, text) => ({\n    type: \"UPDATE\",\n    id,\n    text\n})\n\nexport const deleteTodo = id => ({\n    type: \"DELETE_TODO\",\n    id\n})\n\nexport const filterType = (id, filter) => ({\n    type: 'FILTER_TYPE',\n    id,\n    filter\n})\n\nexport const toggleTodo = id => ({\n    type: 'TOGGLE_TODO',\n    id\n})\n\nexport const toggleCompleted = id => ({\n    type: 'TOGGLE_COMPLETED',\n    id\n})\n\nexport const dragAction = (index, method, object) => ({\n    type: \"DRAG_ACTION\",\n    index,\n    method,\n    object\n})\n\n","export const filters = {\n    SHOW_ALL: 'SHOW_ALL',\n    SHOW_COMPLETED: 'SHOW_COMPLETED',\n    SHOW_ACTIVE: 'SHOW_ACTIVE'\n}","import { filters } from '../constants/filters';\n\nexport const getFilteredTodos = (todos, filter) => {\n    switch (filter) {\n        case filters.SHOW_ALL:\n            return { todos, filteredTodos: [...todos] }\n        case filters.SHOW_COMPLETED:\n            return { todos, filteredTodos: [...todos.filter(t => t.completed)] }\n        case filters.SHOW_ACTIVE:\n            return { todos, filteredTodos: [...todos.filter(t => !t.completed)] }\n        default:\n            throw new Error('Unknown filter: ' + filter)\n    }\n}","import React from 'react';\n\nconst Hamburger = ({ onClick }) => {\n\n    return (\n        <div id=\"hamburger\" className=\"hamburger\" onClick={onClick} >\n            &#9776;\n        </div>\n    );\n}\n\nexport default Hamburger;","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { addTodo, toggleCompleted, editTodo } from '../actions';\nimport { getFilteredTodos } from \"../utils/getFilteredTodos\";\nimport Hamburger from \"./Hamburger\";\nimport \"../App.css\";\n\nconst AddTodo = ({ dispatch, todos, getSidebarval, showSidebar, getHowToUse, showHowToUse }) => {\n    let input, count = 0;\n    let [showBar, setshowBar] = useState(showSidebar);\n    let id = (todos.todos.length === undefined) ? 0 : todos.todos.length;\n    const handleSubmit = event => {\n        event.preventDefault()\n        if (!input.value.trim()) {\n            return\n        }\n        dispatch(addTodo(id, input.value))\n        input.value = ''\n        id = 0;\n    }\n    const handleClick = e => {\n        e.preventDefault();\n        todos.todos.map(todo => (todo.completed ? count++ : \"\"));\n        if (count < todos.todos.length) {\n            todos.todos.map(todo => {\n                if (!todo.completed) {\n                    return dispatch(toggleCompleted(todo.id))\n                }\n                return \"\";\n            })\n        }\n        if (count === todos.todos.length) {\n            todos.todos.map(todo => {\n                if (todo.completed) {\n                    return dispatch(toggleCompleted(todo.id))\n                }\n                return \"\";\n            })\n        }\n    }\n\n    const handleClickNoEdit = e => {\n        e.preventDefault();\n        if (showSidebar) {\n            setshowBar(!showBar);\n            getSidebarval(!showBar);\n        }\n        todos.todos.map(todo => (todo.editing ? dispatch(editTodo(todo.id)) : null));\n    }\n\n    const toggleShowSidebar = e => {\n        e.preventDefault();\n        setshowBar(!showBar);\n        getSidebarval(!showBar);\n    }\n\n    return (\n        <div id=\"add-todo-sticky\" className=\"add-todo-sticky\" onClick={handleClickNoEdit} style={{ opacity: showSidebar ? 0.4 : 1 }}>\n            <div id=\"main-header\" className=\"main-header\" >\n                {!showSidebar ? <Hamburger onClick={e => toggleShowSidebar(e)} /> : <div className=\"placeholder-div\"></div>}\n                <div id=\"todo-header\" className=\"todo-header\">todos</div>\n            </div>\n            <div id=\"add-todo\" className=\"add-todo\" style={{ height: \"50px\" }}>\n                <button id=\"toggle-all\" className=\"toggle-all\" onClick={handleClick}>&#8250;</button>\n                <form id=\"form\" className=\"form\" onSubmit={event => handleSubmit(event)} >\n                    <label for=\"form-input\" class=\"label-hidden\">What needs to be done</label>\n                    <input\n                        autoComplete=\"off\"\n                        id=\"form-input\"\n                        className=\"input-no-style input-override form\"\n                        required\n                        type=\"text\"\n                        placeholder=\"What needs to be done\"\n                        ref={node => (input = node)} />\n                </form>\n            </div>\n        </div >\n    )\n}\n\nconst mapStateToProps = state => ({\n    todos: getFilteredTodos(state.todos, state.filter)\n})\n\nexport default connect(mapStateToProps)(AddTodo)","import React from 'react'\n\nconst Todo = ({ onDoubleClick, onClick, completed, text, id }) => (\n    <li\n        id={id}\n        className=\"input-no-style li-style\"\n        onDoubleClick={onDoubleClick}\n        onClick={onClick}\n        style={{ textDecoration: completed ? 'line-through' : 'none', fontStyle: completed ? 'italic' : 'normal' }}\n    >\n        {text}\n    </li>\n)\n\nexport default Todo","import React from 'react'\nimport \"./Checkbox.css\";\n\nconst Checkbox = ({ onClick, checked }) => (\n    <label className=\"container\">\n        <label for=\"checkbox\" className=\"label-hidden\">Checkbox</label>\n        <input type=\"checkbox\" onClick={onClick} checked={checked} />\n        <span className=\"checkmark\"></span>\n    </label>\n)\n\nexport default Checkbox;","import React from 'react'\nimport { connect } from 'react-redux'\nimport { update } from '../actions'\n\nconst EditTodo = ({ dispatch, id, placeholder }) => {\n    let input = placeholder;\n    const handleSubmit = e => {\n        e.preventDefault();\n        if (!input.value.trim()) {\n            return\n        }\n        dispatch(update(id, input.value))\n        input.value = ''\n    }\n\n    const handleOnBlur = e => {\n        if (!input.value.trim()) {\n            return\n        }\n        dispatch(update(id, input.value))\n        input.value = ''\n    }\n\n    return (\n        <React.Fragment>\n            <form className=\"form\" onSubmit={handleSubmit}>\n                <label for=\"id\" className=\"label-hidden\">Edit</label>\n                <input\n                    id={id}\n                    className=\"input-no-style edit-input-override\"\n                    required\n                    type=\"text\"\n                    defaultValue={input}\n                    autoFocus=\"autofocus\"\n                    ref={node => (input = node)}\n                    onBlur={handleOnBlur}\n                />\n            </form>\n        </React.Fragment>\n    )\n}\n\n\nexport default connect()(EditTodo)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { filterType } from '../actions'\n\nconst Filters = ({ active, children, onClick, showSidebar }) => {\n    return (\n        <button id=\"filters-btn\" className=\"filters-btn\"\n            onClick={!showSidebar ? onClick : null}\n            disabled={active}\n        >\n            {children}\n        </button>\n    )\n}\n\nconst mapStateToProps = (state, props) => ({\n    active: props.filter === state.filter\n})\n\nconst mapDispatchToProps = (dispatch, props) => ({\n    onClick: () => dispatch(filterType(props.id, props.filter))\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Filters)","import React from 'react'\nimport Filters from './Filters'\nimport { filters } from \"../constants/filters\"\n\nconst FilterList = ({ showSidebar }) => (\n    <div id=\"filters\" className=\"filters\">\n        <Filters showSidebar={showSidebar} filter={filters.SHOW_ALL}>All</Filters>\n        <Filters showSidebar={showSidebar} filter={filters.SHOW_ACTIVE}>Active</Filters>\n        <Filters showSidebar={showSidebar} filter={filters.SHOW_COMPLETED}>Completed</Filters>\n    </div>\n)\n\nexport default FilterList;","import { connect } from 'react-redux'\nimport { toggleTodo, deleteTodo, editTodo, update } from '../actions'\nimport { getFilteredTodos } from \"../utils/getFilteredTodos\";\nimport React from 'react';\nimport Todo from './Todo';\nimport Checkbox from \"./Checkbox\";\nimport \"./TodoList.css\";\nimport EditTodo from \"./EditTodo\"\nimport FilterList from './filterList';\nimport itemsCalc from \"../utils/itemsCalc\";\n\nconst TodoList = ({ todos, toggleTodo, deleteTodo, editTodo, getSidebarval, showSidebar }) => {\n    let completedCount = 0, incompletedCount = 0, overallCompletedCount = 0, overallIncompletedCount = 0;\n    todos.filteredTodos.map(todo => ((todo.completed) ? completedCount++ : incompletedCount++));\n    todos.todos.map(todo => ((todo.completed) ? overallCompletedCount++ : overallIncompletedCount++));\n\n    const handleClick = e => {\n        todos.filteredTodos.map(todo => (todo.editing ? editTodo(todo.id) : null));\n    }\n\n    const handleCheckboxClick = id => {\n        todos.filteredTodos.map(todo => {\n            if (id === todo.id) toggleTodo(todo.id);\n            if (todo.editing) editTodo(todo.id);\n            return null;\n        });\n    }\n\n    const handleTodoClick = id => {\n        todos.filteredTodos.map(todo => {\n            if (id !== todo.id) {\n                if (todo.editing) editTodo(todo.id);\n            }\n            return null;\n        });\n    }\n    const handleSidebar = () => {\n        if (showSidebar)\n            getSidebarval(!showSidebar);\n    }\n    return (\n        <div className=\"todolist-container\" onClick={handleSidebar} style={{ opacity: showSidebar ? 0.4 : 1, overflow: showSidebar ? \"hidden\" : null }}>\n            {todos.todos.length ?\n                <React.Fragment>\n                    <ul id=\"ul\" className=\"ul\" onClick={handleClick} style={{}}>\n                        {todos.filteredTodos.map(todo => (\n                            <div\n                                id={todo.id}\n                                text={todo.text}\n                                className=\"todolist-items add-todo spanbutton draggable\"\n                                onClick={handleClick}\n                                draggable={!showSidebar}\n                            >\n                                <Checkbox id={todo.id} checked={todo.completed} onClick={() => handleCheckboxClick(todo.id)} />\n                                {todo.editing !== true ?\n                                    <span className=\"todo-edit-range\">\n                                        <Todo id={todo.id} key={todo.id} {...todo}\n                                            onDoubleClick={() => !showSidebar ? editTodo(todo.id) : null}\n                                            onClick={() => !showSidebar ? handleTodoClick(todo.id) : null}\n                                        />\n                                        <button className=\"btn\" onClick={() => !showSidebar ? deleteTodo(todo.id) : null}>&#10005;</button>\n                                    </span>\n                                    : <EditTodo key={todo.id} id={todo.id} placeholder={todo.text} />}\n                            </div>\n                        ))\n                        }\n                    </ul >\n                    <div id=\"footer\" className=\"add-todo footer-font footer-fix\" onClick={handleClick}>\n                        {itemsCalc(overallCompletedCount, completedCount, incompletedCount, todos.todos.length)}\n                        <FilterList showSidebar={showSidebar} />\n                        {completedCount !== 0 ?\n                            (incompletedCount === 0 ?\n                                <div id=\"clear-completed\" className=\"clear-completed\"\n                                    onClick={() => !showSidebar ? (todos.filteredTodos.map(todo => (deleteTodo(todo.id)))) : null}>\n                                    Clear Completed</div>\n                                : <div id=\"clear-completed\" className=\"clear-completed\"\n                                    onClick={() => !showSidebar ? (todos.filteredTodos.map(todo => (todo.completed ? deleteTodo(todo.id) : null))) : null}>\n                                    Clear Completed</div>)\n                            : null}\n                    </div>\n                </React.Fragment> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    todos: getFilteredTodos(state.todos, state.filter)\n})\n\nconst mapDispatchToProps = dispatch => ({\n    toggleTodo: id => dispatch(toggleTodo(id)),\n    deleteTodo: id => dispatch(deleteTodo(id)),\n    editTodo: id => dispatch(editTodo(id)),\n    update: (id, text) => dispatch(update(id, text))\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(TodoList)","import React from \"react\";\nexport default function itemsCalc(overallCompletedCount, completedCount, incompletedCount, length) {\n    return (\n        overallCompletedCount < length ?\n            (incompletedCount ?\n                <div id=\"completed-count\" className=\"completed-count\" >\n                    {incompletedCount} {incompletedCount > 1 ? \" items left\" : \" item left\"}\n                </div>\n                : <div id=\"completed-count\" className=\"completed-count\" >\n                    {completedCount} {completedCount > 1 ? \" items completed\" : \" item completed\"}\n                </div>)\n            : (completedCount ?\n                (completedCount === overallCompletedCount ?\n                    <div id=\"completed-count\" className=\"completed-count\" >All items completed</div>\n                    : <div id=\"completed-count\" className=\"completed-count\" >\n                        {completedCount} {completedCount > 1 ? \" items completed\" : \" item completed\"}\n                    </div>)\n                : <div id=\"completed-count\" className=\"completed-count\" >\n                    {incompletedCount} {incompletedCount > 1 ? \" items left\" : \" item left\"}\n                </div>)\n    )\n}","import React from 'react';\nconst HowToUse = ({ handleSidebarnav, hideHowToUse }) => {\n    return (\n        <div className=\"how-to-use-container\">\n            <div className=\"how-to-use-header\">\n                <div\n                    className=\"hamburger hb2\"\n                    onClick={e => handleSidebarnav(e)}>&#9776;\n                </div>\n                <div style={{ display: \"flex\", flexDirection: \"row\", flexBasis: \"90%\", justifyContent: \"center\" }}>\n                    <div style={{\n                        fontSize: \"30px\", fontWeight: \"bold\", color: \"white\", padding: \"10px\", cursor: \"default\"\n                    }}>How to use</div>\n                    <div className=\"question-mark q-mark2\">?</div>\n                </div>\n                <button className=\"btn btn2\" onClick={e => hideHowToUse(e)}>&#10005;</button>\n            </div>\n            <ol className=\"how-to-use-content\">\n                <li className=\"instructions\">Double click on any list item to edit it.</li>\n                <li className=\"instructions\">To mark an item as completed, tap on the icon on the left of each item.</li>\n                <li className=\"instructions\">List items can be deleted by clicking on the delete button that appears on the right of each item on clicking.</li>\n                <li className=\"instructions\">Hold and drag the items to re-order the list.</li>\n                <li className=\"instructions\">Filter the items based on the tabs at the bottom.</li>\n                <li className=\"instructions\">Clear Completed option appears at the bottom when one or more items are completed. Click it to remove completed items from the list.</li>\n            </ol>\n            <button id=\"filters-btn\" className=\"filters-btn close-btn\"\n                onClick={e => hideHowToUse(e)}\n            >Close</button>\n        </div>\n    );\n}\n\nexport default HowToUse;","import React, { useState } from 'react';\n\nconst SidebarList = ({ showHowToUse, getHowToUse }) => {\n    let [showHowToUsePage, setshowHowToUsePage] = useState(showHowToUse);\n\n    const toggleHowToUse = e => {\n        e.preventDefault();\n        setshowHowToUsePage(!showHowToUsePage);\n        getHowToUse(!showHowToUsePage);\n    }\n    return (\n        <React.Fragment>\n            <div className=\"how-to-use\" onClick={toggleHowToUse}>\n                <div style={{ fontSize: \"15px\" }}>How to use </div>\n                <div className=\"question-mark\">?</div>\n            </div>\n            <div>Active List\n                <li>qwerty</li>\n            </div>\n            <div>Pending Lists\n                <li>qwerty</li>\n                <li>asdfgh</li>\n            </div>\n            <div>Completed Lists\n                <li>poiuytr</li>\n                <li>lkjhgf</li>\n                <li>mnbvcx</li>\n            </div>\n            <div>All Lists\n                <li>qwerty</li>\n                <li>asdfgh</li>\n                <li>poiuytr</li>\n                <li>lkjhgf</li>\n                <li>mnbvcx</li>\n            </div>\n        </React.Fragment>\n    );\n}\n\nexport default SidebarList;","import React from 'react';\nimport SidebarList from \"./SidebarList\";\nconst Sidebar = ({ onClick, showHowToUse, getHowToUse }) => {\n\n    return (\n        <div id=\"sidebar-menu\" className=\"sidebar-menu\" onClick={onClick}>\n            < div id=\"sidebar-header\" className=\"sidebar-header\" > todos options</div >\n            <div id=\"sidebar-options\" className=\"sidebar-options\">\n                <SidebarList showHowToUse={showHowToUse} getHowToUse={getHowToUse} />\n            </div>\n            <div id=\"sidebar-footer\" className=\"sidebar-footer\"> &#169; Debayan Chatterjee, 2019</div>\n        </div >\n    );\n}\n\nexport default Sidebar;","import React, { Component } from \"react\";\nimport AddTodo from \"./components/AddTodo\";\nimport TodoList from \"./components/TodoList\";\nimport { connect } from 'react-redux'\nimport { editTodo, dragAction } from './actions';\nimport { notDroppableClassList } from \"./utils/classList\";\nimport { getFilteredTodos } from \"./utils/getFilteredTodos\";\nimport HowToUse from \"./components/HowToUse\";\nimport Sidebar from \"./components/Sidebar\";\n\nlet selected = null, source = -1, destination = -1;\nclass App extends Component {\n\n  state = {\n    showSidebar: false,\n    showHowToUse: false\n  }\n\n  handleClick = e => {\n    let { todos, editTodo } = this.props;\n    if (this.state.showSidebar) {\n      this.setState({\n        showSidebar: !this.state.showSidebar\n      })\n    }\n    todos.filteredTodos.map(todo => (todo.editing ? editTodo(todo.id) : null));\n  }\n\n  handleDragStart = (e) => {\n    source = e.target.id;\n    destination = e.target.id;\n    e.dataTransfer.setData(\"text\", e.target.id);\n    e.dataTransfer.dropEffect = \"move\";\n    let data = this.props.todos.filteredTodos.map(d => d);\n    selected = Object.assign({}, data.splice(Number(source), 1)[0]);\n    data.splice(Number(source), 0, selected);\n    this.props.dragAction(Number(source), 1, selected);\n  }\n\n  onDragEnter = (e) => {\n    if (e.target.parentElement.parentElement.classList.contains(\"draggable\")) {\n      e.target.parentElement.parentElement.classList.add('over');\n    }\n  }\n\n  onDragLeave = (e) => {\n    e.stopPropagation();\n    if (e.target.parentElement.parentElement.classList.contains(\"draggable\"))\n      e.target.parentElement.parentElement.classList.remove('over');\n  }\n\n  handleDragOver = (e, length) => {\n    e.preventDefault();\n    e.dataTransfer.dropEffect = \"move\";\n    if (e.target.id !== destination) {\n      if (!notDroppableClassList(e.target.id)) {\n        this.props.dragAction(Number(destination), 1);\n        if (e.target.id !== \"ul\") {\n          destination = e.target.id;\n          this.props.dragAction(Number(destination), 0, selected);\n        }\n        else {\n          destination = length - 1;\n          this.props.dragAction(destination, 0, selected);\n        }\n      }\n    }\n  }\n\n  onDragEnd = e => {\n    this.props.dragAction(Number(destination), 1, selected);\n    let listItems = document.querySelectorAll('.draggable');\n    [].forEach.call(listItems, function (item) {\n      item.classList.remove('over');\n    });\n  }\n  handleSidebarnav = (e) => {\n    if (this.state.showHowToUse) {\n      this.setState({\n        showHowToUse: !this.state.showHowToUse\n      })\n    }\n    this.setState({\n      showSidebar: !this.state.showSidebar\n    })\n  }\n\n  handleShowHowToUse = e => {\n    this.setState({\n      showHowToUse: !this.state.showHowToUse,\n      showSidebar: !this.state.showSidebar\n    })\n  }\n\n  hideHowToUse = e => {\n    this.setState({\n      showHowToUse: !this.state.showHowToUse,\n    })\n  }\n\n  onClickOpenSidebar = e => {\n    e.stopPropagation();\n  }\n  render() {\n    return (\n      <div id=\"outer-container\" className=\"outer-container\" onClick={this.handleClick}\n        onDragStart={(e) => this.handleDragStart(e)}\n        onDragEnter={e => this.onDragEnter(e)}\n        onDragLeave={e => this.onDragLeave(e)}\n        onDragOver={(e) => this.handleDragOver(e, this.props.todos.filteredTodos.length)}\n        onDragEnd={e => this.onDragEnd(e)}\n      >\n        <div id=\"inner-container\" className=\"inner-container\" onClick={this.handleClick}>\n          {this.state.showSidebar ?\n            <Sidebar\n              onClick={e => this.onClickOpenSidebar(e)}\n              showHowToUse={this.state.showHowToUse}\n              getHowToUse={e => this.handleShowHowToUse(e)}\n            />\n            : null}\n          <AddTodo\n            getSidebarval={(e) => this.handleSidebarnav(e)}\n            showSidebar={this.state.showSidebar}\n            showHowToUse={this.state.showHowToUse}\n            getHowToUse={e => this.handleShowHowToUse(e)}\n          />\n          <TodoList\n            getSidebarval={(d) => this.handleSidebarnav(d)}\n            showSidebar={this.state.showSidebar}\n          />\n          {this.state.showHowToUse &&\n            <HowToUse\n              handleSidebarnav={e => this.handleSidebarnav(e)}\n              hideHowToUse={e => this.hideHowToUse(e)}\n            />\n          }\n        </div>\n      </div >\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  todos: getFilteredTodos(state.todos, state.filter)\n})\n\nconst mapDispatchToProps = dispatch => ({\n  editTodo: id => dispatch(editTodo(id)),\n  dragAction: (index, method, object) => dispatch(dragAction(index, method, object))\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App)\n","export function notDroppableClassList(id) {\n    const classList = [\"outer-container\", \"todo-header\", \"toggle-all\", \"form-input\", \"form\", \"add-todo\", \"add-todo-sticky\", \"footer\", \"completed-count\", \"clear-completed\", \"filters\", \"filters-btn\"];\n    for (let i = 0; i < classList.length; i++) {\n        if (classList[i] === id)\n            return true;\n    }\n    return false;\n}\n\n","const todos = (state = [], action) => {\n    switch (action.type) {\n        case 'ADD_TODO':\n            let id = (state.length === 0) ? 0 : action.id;\n            let stateNew = [\n                {\n                    id: id,\n                    text: action.text,\n                    completed: false,\n                    editing: false\n                },\n                ...state\n            ];\n            reorderIds(stateNew);\n            return stateNew;\n        case \"EDIT_TODO\":\n            return state.map(todo =>\n                todo.id === action.id ? { ...todo, editing: !todo.editing } : { ...todo, editing: false }\n            );\n        case \"UPDATE\":\n            let data = [...state];\n            data[action.id].text = action.text;\n            data[action.id].editing = !data[action.id].editing;\n            return data;\n        case 'TOGGLE_TODO':\n            return state.map(todo =>\n                todo.id === action.id ? { ...todo, completed: !todo.completed } : todo\n            )\n        case \"DELETE_TODO\":\n            let newState = [...state];\n            newState = newState.filter(todo => todo.id !== action.id);\n            reorderIds(newState);\n            return newState;\n        case \"TOGGLE_COMPLETED\":\n            let newdata = [...state];\n            newdata[action.id].completed = !newdata[action.id].completed;\n            return newdata;\n\n        case \"DRAG_ACTION\":\n            let newS = [...state];\n            if (action.object !== undefined)\n                newS.splice(action.index, action.method, action.object);\n            else\n                newS.splice(action.index, action.method);\n            reorderIds(newS);\n            return newS;\n        default:\n            return state\n    }\n}\n\nfunction reorderIds(state) {\n    for (let i = 0; i < state.length; i++) {\n        if (state[i].id !== i) state[i].id = i;\n    }\n}\n\nexport default todos","import { filters } from \"../constants/filters\";\n\nconst filter = (state = filters.SHOW_ALL, action) => {\n    switch (action.type) {\n        case 'FILTER_TYPE':\n            return action.filter\n        default:\n            return state\n    }\n}\n\nexport default filter;","import { combineReducers } from 'redux'\nimport todos from './todos'\nimport filter from './filter'\n\nexport default combineReducers({\n    todos,\n    filter\n})","export const loadState = () => {\n  try {\n    const state = localStorage.getItem('state');\n    if (state === null) {\n      return undefined;\n    }\n    return JSON.parse(state);\n  } catch (err) {\n    return undefined;\n  }\n};\n\nexport const saveState = (state) => {\n  try {\n    const serialState = JSON.stringify(state);\n    localStorage.setItem('state', serialState);\n  } catch (err) {\n    console.log(\"Data not saved\");\n  }\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension/developmentOnly\";\nimport rootReducer from \"./reducer\"\nimport { loadState, saveState } from \"./localStorage\";\nimport throttle from 'lodash.throttle';\nimport * as serviceWorker from './serviceWorker';\n\nserviceWorker.register();\n\nconst persistedState = loadState();\nconst store = createStore(rootReducer, persistedState, composeWithDevTools());\n\nstore.subscribe(() => {\n    saveState({\n        todos: store.getState().todos\n    });\n});\n\nstore.subscribe(throttle(() => {\n    saveState({\n        todos: store.getState().todos\n    });\n}, 1000));\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}
{"version":3,"sources":["actions/index.js","constants/filters.js","components/getFilteredTodos.js","components/AddTodo.js","components/Todo.js","components/Checkbox.js","components/EditTodo.js","components/Filters.js","components/filterList.js","components/TodoList.js","App.js","utils/classList.js","reducer/todos.js","reducer/filter.js","reducer/index.js","localStorage.js","serviceWorker.js","index.js"],"names":["editTodo","id","text","type","update","toggleCompleted","filters","getFilteredTodos","todos","filter","filteredTodos","t","completed","Error","connect","state","input","dispatch","count","undefined","length","className","onClick","e","preventDefault","map","todo","editing","onSubmit","event","value","trim","addTodo","handleSubmit","required","placeholder","ref","node","Todo","style","textDecoration","fontStyle","Checkbox","checked","Fragment","defaultValue","onBlur","props","active","children","disabled","FilterList","toggleTodo","deleteTodo","completedCount","incompletedCount","handleClick","draggable","key","selected","source","destination","App","handleDragStart","target","dataTransfer","setData","dropEffect","data","d","Object","assign","splice","Number","dragAction","onDragEnter","parentElement","classList","contains","add","onDragLeave","stopPropagation","remove","handleDragOver","console","log","i","notDroppableClassList","onDragEnd","listItems","document","querySelectorAll","forEach","call","item","opacity","this","onDragStart","onDragOver","Component","index","method","object","reorderIds","action","newState","newdata","newS","combineReducers","saveState","serialState","JSON","stringify","localStorage","setItem","err","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","persistedState","getItem","parse","loadState","store","createStore","rootReducer","composeWithDevTools","subscribe","getState","throttle","ReactDOM","render","getElementById"],"mappings":"uTAMaA,EAAW,SAACC,EAAIC,GAAL,MAAe,CACnCC,KAAM,YACNF,KACAC,SAGSE,EAAS,SAACH,EAAIC,GAAL,MAAe,CACjCC,KAAM,SACNF,KACAC,SAmBSG,EAAkB,SAAAJ,GAAE,MAAK,CAClCE,KAAM,mBACNF,O,OCpCSK,EACC,WADDA,EAEO,iBAFPA,EAGI,cCDJC,EAAmB,SAACC,EAAOC,GACpC,OAAQA,GACJ,KAAKH,EACD,MAAO,CAAEE,QAAOE,cAAc,YAAKF,IACvC,KAAKF,EACD,MAAO,CAAEE,QAAOE,cAAc,YAAKF,EAAMC,QAAO,SAAAE,GAAC,OAAIA,EAAEC,eAC3D,KAAKN,EACD,MAAO,CAAEE,QAAOE,cAAc,YAAKF,EAAMC,QAAO,SAAAE,GAAC,OAAKA,EAAEC,eAC5D,QACI,MAAM,IAAIC,MAAM,mBAAqBJ,KCwDlCK,G,MAAAA,aAJS,SAAAC,GAAK,MAAK,CAC9BP,MAAOD,EAAiBQ,EAAMP,MAAOO,EAAMN,WAGhCK,EA7DC,SAAC,GAAyB,IAClCE,EADWC,EAAsB,EAAtBA,SAAUT,EAAY,EAAZA,MACdU,EAAQ,EACfjB,OAA6BkB,IAAvBX,EAAMA,MAAMY,OAAwB,EAAIZ,EAAMA,MAAMY,OAoC9D,OACI,yBAAKnB,GAAG,kBAAkBoB,UAAU,kBAAkBC,QANhC,SAAAC,GACtBA,EAAEC,iBACFhB,EAAMA,MAAMiB,KAAI,SAAAC,GAAI,OAAKA,EAAKC,QAAUV,EAASjB,EAAS0B,EAAKzB,KAAO,UAKlE,yBAAKA,GAAG,cAAcoB,UAAU,eAAhC,SACA,yBAAKpB,GAAG,WAAWoB,UAAU,YACzB,4BAAQpB,GAAG,aAAaoB,UAAU,aAAaC,QA9BvC,SAAAC,GAChBA,EAAEC,iBACFhB,EAAMA,MAAMiB,KAAI,SAAAC,GAAI,OAAKA,EAAKd,UAAYM,IAAU,MAChDA,EAAQV,EAAMA,MAAMY,QACpBZ,EAAMA,MAAMiB,KAAI,SAAAC,GACZ,OAAKA,EAAKd,UAGH,GAFIK,EAASZ,EAAgBqB,EAAKzB,QAK7CiB,IAAUV,EAAMA,MAAMY,QACtBZ,EAAMA,MAAMiB,KAAI,SAAAC,GACZ,OAAIA,EAAKd,UACEK,EAASZ,EAAgBqB,EAAKzB,KAElC,QAcP,UACA,0BAAMA,GAAG,OAAOoB,UAAU,OAAOO,SAAU,SAAAC,GAAK,OAxCvC,SAAAA,GACjBA,EAAML,iBACDR,EAAMc,MAAMC,SAGjBd,EHde,SAAChB,EAAIC,GAAL,MAAe,CAClCC,KAAM,WACNF,KACAC,QGWa8B,CAAQ/B,EAAIe,EAAMc,QAC3Bd,EAAMc,MAAQ,GACd7B,EAAK,GAiCuDgC,CAAaJ,KAC7D,2BACI5B,GAAG,aACHoB,UAAU,qCACVa,UAAQ,EACR/B,KAAK,OACLgC,YAAY,wBACZC,IAAK,SAAAC,GAAI,OAAKrB,EAAQqB,YC3C/BC,EAXF,SAAC,GAAD,IAAGhB,EAAH,EAAGA,QAASV,EAAZ,EAAYA,UAAWV,EAAvB,EAAuBA,KAAMD,EAA7B,EAA6BA,GAA7B,OACT,wBACIA,GAAIA,EACJoB,UAAU,0BACVC,QAASA,EACTiB,MAAO,CAAEC,eAAgB5B,EAAY,eAAiB,OAAQ6B,UAAW7B,EAAY,SAAW,WAE/FV,ICCMwC,G,MAPE,SAAC,GAAD,IAAGpB,EAAH,EAAGA,QAASqB,EAAZ,EAAYA,QAAZ,OACb,2BAAOtB,UAAU,aACb,2BAAOlB,KAAK,WAAWmB,QAASA,EAASqB,QAASA,IAClD,0BAAMtB,UAAU,iBCmCTP,G,MAAAA,eArCE,SAAC,GAAmC,IAAjCG,EAAgC,EAAhCA,SAAUhB,EAAsB,EAAtBA,GACtBe,EAD4C,EAAlBmB,YAmB9B,OACI,kBAAC,IAAMS,SAAP,KACI,0BAAMvB,UAAU,OAAOO,SAnBV,SAAAL,GACjBA,EAAEC,iBACGR,EAAMc,MAAMC,SAGjBd,EAASb,EAAOH,EAAIe,EAAMc,QAC1Bd,EAAMc,MAAQ,MAcN,2BACI7B,GAAIA,EACJoB,UAAU,qCACVa,UAAQ,EACR/B,KAAK,OACL0C,aAAc7B,EACdoB,IAAK,SAAAC,GAAI,OAAKrB,EAAQqB,GACtBS,OAlBK,SAAAvB,GACZP,EAAMc,MAAMC,SAGjBd,EAASb,EAAOH,EAAIe,EAAMc,QAC1Bd,EAAMc,MAAQ,aCGPhB,eARS,SAACC,EAAOgC,GAAR,MAAmB,CACvCC,OAAQD,EAAMtC,SAAWM,EAAMN,WAGR,SAACQ,EAAU8B,GAAX,MAAsB,CAC7CzB,QAAS,kBAAML,GPGQhB,EOHY8C,EAAM9C,GPGdQ,EOHkBsC,EAAMtC,OPGZ,CACvCN,KAAM,cACNF,KACAQ,YAHsB,IAACR,EAAIQ,MOAhBK,EAnBC,SAAC,GAAmC,IAAjCkC,EAAgC,EAAhCA,OAAQC,EAAwB,EAAxBA,SAAU3B,EAAc,EAAdA,QACjC,OACI,4BAAQD,UAAU,cACdC,QAASA,EACT4B,SAAUF,GAETC,MCEEE,EARI,kBACf,yBAAK9B,UAAU,WACX,kBAAC,EAAD,CAASZ,OAAQH,GAAjB,OACA,kBAAC,EAAD,CAASG,OAAQH,GAAjB,UACA,kBAAC,EAAD,CAASG,OAAQH,GAAjB,eCyEOQ,eAXS,SAAAC,GAAK,MAAK,CAC9BP,MAAOD,EAAiBQ,EAAMP,MAAOO,EAAMN,YAGpB,SAAAQ,GAAQ,MAAK,CACpCmC,WAAY,SAAAnD,GAAE,OAAIgB,ET9CI,SAAAhB,GAAE,MAAK,CAC7BE,KAAM,cACNF,MS4C2BmD,CAAWnD,KACtCoD,WAAY,SAAApD,GAAE,OAAIgB,ET1DI,SAAAhB,GAAE,MAAK,CAC7BE,KAAM,cACNF,MSwD2BoD,CAAWpD,KACtCD,SAAU,SAAAC,GAAE,OAAIgB,EAASjB,EAASC,KAClCG,OAAQ,SAACH,EAAIC,GAAL,OAAce,EAASb,EAAOH,EAAIC,QAG/BY,EAvEE,SAAC,GAAiD,IAA/CN,EAA8C,EAA9CA,MAAO4C,EAAuC,EAAvCA,WAAYC,EAA2B,EAA3BA,WAAYrD,EAAe,EAAfA,SAC3CsD,EAAiB,EAAGC,EAAmB,EAC3C/C,EAAME,cAAce,KAAI,SAAAC,GAAI,OAAOA,EAAKd,UAAgC2C,IAAnBD,OAErD,IAAME,EAAc,SAAAjC,GAChBf,EAAME,cAAce,KAAI,SAAAC,GAAI,OAAKA,EAAKC,QAAU3B,EAAS0B,EAAKzB,IAAM,SAWxE,OACI,yBAAKoB,UAAU,sBACVb,EAAMA,MAAMY,OACT,kBAAC,IAAMwB,SAAP,KACI,wBAAI3C,GAAG,KAAKoB,UAAU,KAAKC,QAASkC,GAC/BhD,EAAME,cAAce,KAAI,SAAAC,GAAI,OACzB,yBACIzB,GAAIyB,EAAKzB,GACTC,KAAMwB,EAAKxB,KACXmB,UAAU,+CACVC,QAASkC,EACTC,WAAS,GAET,kBAAC,EAAD,CAAUxD,GAAIyB,EAAKzB,GAAI0C,QAASjB,EAAKd,UAAWU,QAAS,kBArBzDrB,EAqBmFyB,EAAKzB,QApBhHO,EAAME,cAAce,KAAI,SAAAC,GAGpB,OAFIzB,IAAOyB,EAAKzB,IAAImD,EAAW1B,EAAKzB,IAChCyB,EAAKC,SAAS3B,EAAS0B,EAAKzB,IACzB,QAJa,IAAAA,MAsBkB,IAAjByB,EAAKC,QACF,0BAAMN,UAAU,mBACZ,kBAAC,EAAD,eAAMpB,GAAIyB,EAAKzB,GAAIyD,IAAKhC,EAAKzB,IAAQyB,EAArC,CACIJ,QAAS,kBAAMtB,EAAS0B,EAAKzB,QAEjC,4BAAQoB,UAAU,MAAMC,QAAS,kBAAM+B,EAAW3B,EAAKzB,MAAvD,WAEF,kBAAC,EAAD,CAAUyD,IAAKhC,EAAKzB,GAAIA,GAAIyB,EAAKzB,GAAIkC,YAAaT,EAAKxB,YAKzE,yBAAKmB,UAAU,kCAAkCC,QAASkC,GACtD,yBAAKnC,UAAU,mBAAf,IAAoCiC,EAApC,IAAqDA,EAAiB,EAAI,cAAgB,cAC1F,kBAAC,EAAD,MACsB,IAArBC,EACuB,IAAnBD,EACG,yBAAKjC,UAAU,kBACXC,QAAS,kBAAOd,EAAME,cAAce,KAAI,SAAAC,GAAI,OAAK2B,EAAW3B,EAAKzB,SADrE,mBAGE,yBAAKoB,UAAU,kBACbC,QAAS,kBAAOd,EAAME,cAAce,KAAI,SAAAC,GAAI,OAAKA,EAAKd,UAAYyC,EAAW3B,EAAKzB,IAAM,UAD1F,mBAGJ,OAEM,SCzDpC,IAAI0D,EAAW,KAAMC,GAAU,EAAGC,GAAe,EAC3CC,E,2MAEJN,YAAc,SAAAjC,GAAM,IAAD,EACS,EAAKwB,MAAzBvC,EADW,EACXA,MAAOR,EADI,EACJA,SACbQ,EAAME,cAAce,KAAI,SAAAC,GAAI,OAAKA,EAAKC,QAAU3B,EAAS0B,EAAKzB,IAAM,S,EAGtE8D,gBAAkB,SAACxC,GACjBqC,EAASrC,EAAEyC,OAAO/D,GAClB4D,EAActC,EAAEyC,OAAO/D,GACvBsB,EAAE0C,aAAaC,QAAQ,OAAQ3C,EAAEyC,OAAO/D,IACxCsB,EAAE0C,aAAaE,WAAa,OAC5B,IAAIC,EAAO,EAAKrB,MAAMvC,MAAME,cAAce,KAAI,SAAA4C,GAAC,OAAIA,KACnDV,EAAWW,OAAOC,OAAO,GAAIH,EAAKI,OAAOC,OAAOb,GAAS,GAAG,IAC5DQ,EAAKI,OAAOC,OAAOb,GAAS,EAAGD,GAC/B,EAAKZ,MAAM2B,WAAWD,OAAOb,GAAS,EAAGD,I,EAG3CgB,YAAc,SAACpD,GACTA,EAAEyC,OAAOY,cAAcA,cAAcC,UAAUC,SAAS,cAC1DvD,EAAEyC,OAAOY,cAAcA,cAAcC,UAAUE,IAAI,S,EAIvDC,YAAc,SAACzD,GACbA,EAAE0D,kBACE1D,EAAEyC,OAAOY,cAAcA,cAAcC,UAAUC,SAAS,cAC1DvD,EAAEyC,OAAOY,cAAcA,cAAcC,UAAUK,OAAO,S,EAG1DC,eAAiB,SAAC5D,EAAGH,GACnBG,EAAEC,iBACFD,EAAE0C,aAAaE,WAAa,OAC5BiB,QAAQC,IAAI9D,EAAEyC,OAAO/D,GAAI4D,GACrBtC,EAAEyC,OAAO/D,KAAO4D,IC3CjB,SAA+B5D,GAElC,IADA,IAAM4E,EAAY,CAAC,kBAAmB,cAAe,aAAc,aAAc,OAAQ,WAAY,mBAC5FS,EAAI,EAAGA,EAAIT,EAAUzD,OAAQkE,IAClC,GAAIT,EAAUS,KAAOrF,EACjB,OAAO,EAEf,OAAO,EDsCAsF,CAAsBhE,EAAEyC,OAAO/D,MAClCmF,QAAQC,IAAI,YACZ,EAAKtC,MAAM2B,WAAWD,OAAOZ,GAAc,GACvB,OAAhBtC,EAAEyC,OAAO/D,IACX4D,EAActC,EAAEyC,OAAO/D,GACvB,EAAK8C,MAAM2B,WAAWD,OAAOZ,GAAc,EAAGF,KAG9CE,EAAczC,EAAS,EACvB,EAAK2B,MAAM2B,WAAWb,EAAa,EAAGF,O,EAM9C6B,UAAY,SAAAjE,GACV6D,QAAQC,IAAI,WACZ,EAAKtC,MAAM2B,WAAWD,OAAOZ,GAAc,EAAGF,GAC9C,IAAI8B,EAAYC,SAASC,iBAAiB,cAC1C,GAAGC,QAAQC,KAAKJ,GAAW,SAAUK,GACnCA,EAAKjB,UAAUK,OAAO,WAExB3D,EAAEyC,OAAOzB,MAAMwD,QAAU,K,wEAIjB,IAAD,OACP,OACE,yBAAK9F,GAAG,kBAAkBoB,UAAU,kBAAkBC,QAAS0E,KAAKxC,YAClEyC,YAAa,SAAC1E,GAAD,OAAO,EAAKwC,gBAAgBxC,IACzCoD,YAAa,SAAApD,GAAC,OAAI,EAAKoD,YAAYpD,IACnCyD,YAAa,SAAAzD,GAAC,OAAI,EAAKyD,YAAYzD,IACnC2E,WAAY,SAAC3E,GAAD,OAAO,EAAK4D,eAAe5D,EAAG,EAAKwB,MAAMvC,MAAME,cAAcU,SACzEoE,UAAW,SAAAjE,GAAC,OAAI,EAAKiE,UAAUjE,KAE/B,yBAAKtB,GAAG,kBAAkBoB,UAAU,kBAAkBC,QAAS0E,KAAKxC,aAClE,kBAAC,EAAD,MACA,kBAAC,EAAD,Y,GAxEQ2C,aAwFHrF,eATS,SAAAC,GAAK,MAAK,CAChCP,MAAOD,EAAiBQ,EAAMP,MAAOO,EAAMN,YAGlB,SAAAQ,GAAQ,MAAK,CACtCjB,SAAU,SAAAC,GAAE,OAAIgB,EAASjB,EAASC,KAClCyE,WAAY,SAAC0B,EAAOC,EAAQC,GAAhB,OAA2BrF,EVvDf,SAACmF,EAAOC,EAAQC,GAAhB,MAA4B,CAClDnG,KAAM,cACNiG,QACAC,SACAC,UUmD8C5B,CAAW0B,EAAOC,EAAQC,QAG7DxF,CAGbgD,G,glBEpDF,SAASyC,EAAWxF,GAChB,IAAK,IAAIuE,EAAI,EAAGA,EAAIvE,EAAMK,OAAQkE,IAC1BvE,EAAMuE,GAAGrF,KAAOqF,IAAGvE,EAAMuE,GAAGrF,GAAKqF,GAI9B9E,MAtDD,WAAyB,IAAxBO,EAAuB,uDAAf,GAAIyF,EAAW,uCAClC,OAAQA,EAAOrG,MACX,IAAK,WACD,IAAIF,EAAuB,IAAjBc,EAAMK,OAAgB,EAAIoF,EAAOvG,GAC3C,MAAM,GAAN,mBACOc,GADP,CACc,CACNd,GAAIA,EACJC,KAAMsG,EAAOtG,KACbU,WAAW,EACXe,SAAS,KAGrB,IAAK,YACD,OAAOZ,EAAMU,KAAI,SAAAC,GAAI,OACjBA,EAAKzB,KAAOuG,EAAOvG,GAAnB,KAA6ByB,EAA7B,CAAmCC,SAAUD,EAAKC,UAAlD,KAAmED,EAAnE,CAAyEC,SAAS,OAE1F,IAAK,SACD,IAAIyC,EAAI,YAAOrD,GAGf,OAFAqD,EAAKoC,EAAOvG,IAAIC,KAAOsG,EAAOtG,KAC9BkE,EAAKoC,EAAOvG,IAAI0B,SAAWyC,EAAKoC,EAAOvG,IAAI0B,QACpCyC,EACX,IAAK,cACD,OAAOrD,EAAMU,KAAI,SAAAC,GAAI,OACjBA,EAAKzB,KAAOuG,EAAOvG,GAAnB,KAA6ByB,EAA7B,CAAmCd,WAAYc,EAAKd,YAAcc,KAE1E,IAAK,cACD,IAAI+E,EAAQ,YAAO1F,GAGnB,OADAwF,EADAE,EAAWA,EAAShG,QAAO,SAAAiB,GAAI,OAAIA,EAAKzB,KAAOuG,EAAOvG,OAE/CwG,EACX,IAAK,mBACD,IAAIC,EAAO,YAAO3F,GAElB,OADA2F,EAAQF,EAAOvG,IAAIW,WAAa8F,EAAQF,EAAOvG,IAAIW,UAC5C8F,EAEX,IAAK,cACD,IAAIC,EAAI,YAAO5F,GAMf,YALsBI,IAAlBqF,EAAOF,OACPK,EAAKnC,OAAOgC,EAAOJ,MAAOI,EAAOH,OAAQG,EAAOF,QAEhDK,EAAKnC,OAAOgC,EAAOJ,MAAOI,EAAOH,QACrCE,EAAWI,GACJA,EACX,QACI,OAAO5F,ICjCJN,EATA,WAAuC,IAAtCM,EAAqC,uDAA7BT,EAAkBkG,EAAW,uCACjD,OAAQA,EAAOrG,MACX,IAAK,cACD,OAAOqG,EAAO/F,OAClB,QACI,OAAOM,ICHJ6F,4BAAgB,CAC3BpG,QACAC,WCMSoG,EAAY,SAAC9F,GACxB,IACE,IAAM+F,EAAcC,KAAKC,UAAUjG,GACnCkG,aAAaC,QAAQ,QAASJ,GAC9B,MAAOK,GACP/B,QAAQC,IAAI,oB,iBCLV+B,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEa,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCJ,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBpH,QACf8G,UAAUC,cAAcQ,YAI1BlD,QAAQC,IACN,iHAKEuC,GAAUA,EAAOW,UACnBX,EAAOW,SAASN,KAMlB7C,QAAQC,IAAI,sCAGRuC,GAAUA,EAAOY,WACnBZ,EAAOY,UAAUP,WAO5BQ,OAAM,SAAAC,GACLtD,QAAQsD,MAAM,4CAA6CA,OA1E1D,SAAkBd,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIc,IAAIC,SAAwBtB,OAAOC,SAASsB,MACpDC,SAAWxB,OAAOC,SAASuB,OAIvC,OAGFxB,OAAOyB,iBAAiB,QAAQ,WAC9B,IAAMpB,EAAK,UAAMiB,SAAN,sBAEPxB,IAgEV,SAAiCO,EAAOC,GAEtCoB,MAAMrB,GACHK,MAAK,SAAAiB,GAEJ,IAAMC,EAAcD,EAASE,QAAQC,IAAI,gBAEnB,MAApBH,EAASI,QACO,MAAfH,IAA8D,IAAvCA,EAAYI,QAAQ,cAG5CzB,UAAUC,cAAcyB,MAAMvB,MAAK,SAAAC,GACjCA,EAAauB,aAAaxB,MAAK,WAC7BV,OAAOC,SAASkC,eAKpB/B,EAAgBC,EAAOC,MAG1Ba,OAAM,WACLrD,QAAQC,IACN,oEArFAqE,CAAwB/B,EAAOC,GAI/BC,UAAUC,cAAcyB,MAAMvB,MAAK,WACjC5C,QAAQC,IACN,iHAMJqC,EAAgBC,EAAOC,OCtC/BE,GAEA,IAAM6B,EFdmB,WACvB,IACE,IAAM5I,EAAQkG,aAAa2C,QAAQ,SACnC,GAAc,OAAV7I,EACF,OAEF,OAAOgG,KAAK8C,MAAM9I,GAClB,MAAOoG,GACP,QEMmB2C,GACjBC,EAAQC,sBAAYC,EAAaN,EAAgBO,iCAEvDH,EAAMI,WAAU,WACZtD,EAAU,CACNrG,MAAOuJ,EAAMK,WAAW5J,WAIhCuJ,EAAMI,UAAUE,KAAS,WACrBxD,EAAU,CACNrG,MAAOuJ,EAAMK,WAAW5J,UAE7B,MAEH8J,IAASC,OACL,kBAAC,IAAD,CAAUR,MAAOA,GACb,kBAAC,EAAD,OAEJrE,SAAS8E,eAAe,W","file":"static/js/main.1d7579be.chunk.js","sourcesContent":["export const addTodo = (id, text) => ({\n    type: 'ADD_TODO',\n    id,\n    text\n})\n\nexport const editTodo = (id, text) => ({\n    type: \"EDIT_TODO\",\n    id,\n    text\n})\n\nexport const update = (id, text) => ({\n    type: \"UPDATE\",\n    id,\n    text\n})\n\nexport const deleteTodo = id => ({\n    type: \"DELETE_TODO\",\n    id\n})\n\nexport const filterType = (id, filter) => ({\n    type: 'FILTER_TYPE',\n    id,\n    filter\n})\n\nexport const toggleTodo = id => ({\n    type: 'TOGGLE_TODO',\n    id\n})\n\nexport const toggleCompleted = id => ({\n    type: 'TOGGLE_COMPLETED',\n    id\n})\n\nexport const dragAction = (index, method, object) => ({\n    type: \"DRAG_ACTION\",\n    index,\n    method,\n    object\n})\n\n","export const filters = {\n    SHOW_ALL: 'SHOW_ALL',\n    SHOW_COMPLETED: 'SHOW_COMPLETED',\n    SHOW_ACTIVE: 'SHOW_ACTIVE'\n}","import { filters } from '../constants/filters';\n\nexport const getFilteredTodos = (todos, filter) => {\n    switch (filter) {\n        case filters.SHOW_ALL:\n            return { todos, filteredTodos: [...todos] }\n        case filters.SHOW_COMPLETED:\n            return { todos, filteredTodos: [...todos.filter(t => t.completed)] }\n        case filters.SHOW_ACTIVE:\n            return { todos, filteredTodos: [...todos.filter(t => !t.completed)] }\n        default:\n            throw new Error('Unknown filter: ' + filter)\n    }\n}","import React from 'react'\nimport { connect } from 'react-redux'\nimport { addTodo, toggleCompleted, editTodo } from '../actions';\nimport { getFilteredTodos } from \"./getFilteredTodos\";\nimport \"../App.css\";\n\nconst AddTodo = ({ dispatch, todos }) => {\n    let input, count = 0;\n    let id = (todos.todos.length === undefined) ? 0 : todos.todos.length;\n    const handleSubmit = event => {\n        event.preventDefault()\n        if (!input.value.trim()) {\n            return\n        }\n        dispatch(addTodo(id, input.value))\n        input.value = ''\n        id = 0;\n    }\n    const handleClick = e => {\n        e.preventDefault();\n        todos.todos.map(todo => (todo.completed ? count++ : \"\"));\n        if (count < todos.todos.length) {\n            todos.todos.map(todo => {\n                if (!todo.completed) {\n                    return dispatch(toggleCompleted(todo.id))\n                }\n                return \"\";\n            })\n        }\n        if (count === todos.todos.length) {\n            todos.todos.map(todo => {\n                if (todo.completed) {\n                    return dispatch(toggleCompleted(todo.id))\n                }\n                return \"\";\n            })\n        }\n    }\n\n    const handleClickNoEdit = e => {\n        e.preventDefault();\n        todos.todos.map(todo => (todo.editing ? dispatch(editTodo(todo.id)) : null));\n    }\n\n    return (\n        <div id=\"add-todo-sticky\" className=\"add-todo-sticky\" onClick={handleClickNoEdit}>\n            <div id=\"todo-header\" className=\"todo-header\">todos</div>\n            <div id=\"add-todo\" className=\"add-todo\">\n                <button id=\"toggle-all\" className=\"toggle-all\" onClick={handleClick}>&#8250;</button>\n                <form id=\"form\" className=\"form\" onSubmit={event => handleSubmit(event)} >\n                    <input\n                        id=\"form-input\"\n                        className=\"input-no-style input-override form\"\n                        required\n                        type=\"text\"\n                        placeholder=\"What needs to be done\"\n                        ref={node => (input = node)} />\n                </form>\n            </div>\n        </div >\n    )\n}\n\nconst mapStateToProps = state => ({\n    todos: getFilteredTodos(state.todos, state.filter)\n})\n\nexport default connect(mapStateToProps)(AddTodo)","import React from 'react'\n\nconst Todo = ({ onClick, completed, text, id }) => (\n    <li\n        id={id}\n        className=\"input-no-style li-style\"\n        onClick={onClick}\n        style={{ textDecoration: completed ? 'line-through' : 'none', fontStyle: completed ? 'italic' : 'normal' }}\n    >\n        {text}\n    </li>\n)\n\nexport default Todo","import React from 'react'\nimport \"./Checkbox.css\";\n\nconst Checkbox = ({ onClick, checked }) => (\n    <label className=\"container\">\n        <input type=\"checkbox\" onClick={onClick} checked={checked} />\n        <span className=\"checkmark\"></span>\n    </label>\n)\n\nexport default Checkbox;","import React from 'react'\nimport { connect } from 'react-redux'\nimport { update } from '../actions'\n\nconst EditTodo = ({ dispatch, id, placeholder }) => {\n    let input = placeholder;\n    const handleSubmit = e => {\n        e.preventDefault();\n        if (!input.value.trim()) {\n            return\n        }\n        dispatch(update(id, input.value))\n        input.value = ''\n    }\n\n    const handleOnBlur = e => {\n        if (!input.value.trim()) {\n            return\n        }\n        dispatch(update(id, input.value))\n        input.value = ''\n    }\n\n    return (\n        <React.Fragment>\n            <form className=\"form\" onSubmit={handleSubmit}>\n                <input\n                    id={id}\n                    className=\"input-no-style edit-input-override\"\n                    required\n                    type=\"text\"\n                    defaultValue={input}\n                    ref={node => (input = node)}\n                    onBlur={handleOnBlur}\n                />\n            </form>\n        </React.Fragment>\n    )\n}\n\n\nexport default connect()(EditTodo)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { filterType } from '../actions'\n\nconst Filters = ({ active, children, onClick }) => {\n    return (\n        <button className=\"filters-btn\"\n            onClick={onClick}\n            disabled={active}\n        >\n            {children}\n        </button>\n    )\n}\n\nconst mapStateToProps = (state, props) => ({\n    active: props.filter === state.filter\n})\n\nconst mapDispatchToProps = (dispatch, props) => ({\n    onClick: () => dispatch(filterType(props.id, props.filter))\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Filters)","import React from 'react'\nimport Filters from './Filters'\nimport { filters } from \"../constants/filters\"\n\nconst FilterList = () => (\n    <div className=\"filters\">\n        <Filters filter={filters.SHOW_ALL}>All</Filters>\n        <Filters filter={filters.SHOW_ACTIVE}>Active</Filters>\n        <Filters filter={filters.SHOW_COMPLETED}>Completed</Filters>\n    </div>\n)\n\nexport default FilterList;","import { connect } from 'react-redux'\nimport { toggleTodo, deleteTodo, editTodo, update } from '../actions'\nimport { getFilteredTodos } from \"./getFilteredTodos\";\nimport React from 'react';\nimport Todo from './Todo';\nimport Checkbox from \"./Checkbox\";\nimport \"./TodoList.css\";\nimport EditTodo from \"./EditTodo\"\nimport FilterList from './filterList';\n\nconst TodoList = ({ todos, toggleTodo, deleteTodo, editTodo }) => {\n    let completedCount = 0, incompletedCount = 0;\n    todos.filteredTodos.map(todo => ((!todo.completed) ? completedCount++ : incompletedCount++));\n\n    const handleClick = e => {\n        todos.filteredTodos.map(todo => (todo.editing ? editTodo(todo.id) : null));\n    }\n\n    const handleCheckboxClick = id => {\n        todos.filteredTodos.map(todo => {\n            if (id === todo.id) toggleTodo(todo.id);\n            if (todo.editing) editTodo(todo.id);\n            return null;\n        });\n    }\n\n    return (\n        <div className=\"todolist-container\">\n            {todos.todos.length ?\n                <React.Fragment>\n                    <ul id=\"ul\" className=\"ul\" onClick={handleClick}>\n                        {todos.filteredTodos.map(todo => (\n                            <div\n                                id={todo.id}\n                                text={todo.text}\n                                className=\"todolist-items add-todo spanbutton draggable\"\n                                onClick={handleClick}\n                                draggable\n                            >\n                                <Checkbox id={todo.id} checked={todo.completed} onClick={() => handleCheckboxClick(todo.id)} />\n                                {todo.editing !== true ?\n                                    <span className=\"todo-edit-range\">\n                                        <Todo id={todo.id} key={todo.id} {...todo}\n                                            onClick={() => editTodo(todo.id)}\n                                        />\n                                        <button className=\"btn\" onClick={() => deleteTodo(todo.id)}>&#10005;</button>\n                                    </span>\n                                    : <EditTodo key={todo.id} id={todo.id} placeholder={todo.text} />}\n                            </div>\n                        ))\n                        }\n                    </ul >\n                    <div className=\"add-todo footer-font footer-fix\" onClick={handleClick}>\n                        <div className=\"completed-count\" > {completedCount} {completedCount > 1 ? \" items left\" : \" item left\"}</div>\n                        <FilterList />\n                        {incompletedCount !== 0 ?\n                            (completedCount === 0 ?\n                                <div className=\"clear-completed\"\n                                    onClick={() => (todos.filteredTodos.map(todo => (deleteTodo(todo.id))))}>\n                                    Clear Completed</div>\n                                : <div className=\"clear-completed\"\n                                    onClick={() => (todos.filteredTodos.map(todo => (todo.completed ? deleteTodo(todo.id) : null)))}>\n                                    Clear Completed</div>)\n                            : null}\n                    </div>\n                </React.Fragment> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    todos: getFilteredTodos(state.todos, state.filter)\n})\n\nconst mapDispatchToProps = dispatch => ({\n    toggleTodo: id => dispatch(toggleTodo(id)),\n    deleteTodo: id => dispatch(deleteTodo(id)),\n    editTodo: id => dispatch(editTodo(id)),\n    update: (id, text) => dispatch(update(id, text))\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(TodoList)","import React, { Component } from \"react\";\nimport AddTodo from \"./components/AddTodo\";\nimport TodoList from \"./components/TodoList\";\nimport { connect } from 'react-redux'\nimport { editTodo, dragAction } from './actions';\nimport { notDroppableClassList } from \"./utils/classList\";\nimport { getFilteredTodos } from \"./components/getFilteredTodos\";\n\nlet selected = null, source = -1, destination = -1;\nclass App extends Component {\n\n  handleClick = e => {\n    let { todos, editTodo } = this.props;\n    todos.filteredTodos.map(todo => (todo.editing ? editTodo(todo.id) : null));\n  }\n\n  handleDragStart = (e) => {\n    source = e.target.id;\n    destination = e.target.id;\n    e.dataTransfer.setData(\"text\", e.target.id);\n    e.dataTransfer.dropEffect = \"move\";\n    let data = this.props.todos.filteredTodos.map(d => d);\n    selected = Object.assign({}, data.splice(Number(source), 1)[0]);\n    data.splice(Number(source), 0, selected);\n    this.props.dragAction(Number(source), 1, selected);\n  }\n\n  onDragEnter = (e) => {\n    if (e.target.parentElement.parentElement.classList.contains(\"draggable\")) {\n      e.target.parentElement.parentElement.classList.add('over');\n    }\n  }\n\n  onDragLeave = (e) => {\n    e.stopPropagation();\n    if (e.target.parentElement.parentElement.classList.contains(\"draggable\"))\n      e.target.parentElement.parentElement.classList.remove('over');\n  }\n\n  handleDragOver = (e, length) => {\n    e.preventDefault();\n    e.dataTransfer.dropEffect = \"move\";\n    console.log(e.target.id, destination)\n    if (e.target.id !== destination) {\n      if (!notDroppableClassList(e.target.id)) {\n        console.log(\"dragover\")\n        this.props.dragAction(Number(destination), 1);\n        if (e.target.id !== \"ul\") {\n          destination = e.target.id;\n          this.props.dragAction(Number(destination), 0, selected);\n        }\n        else {\n          destination = length - 1;\n          this.props.dragAction(destination, 0, selected);\n        }\n      }\n    }\n  }\n\n  onDragEnd = e => {\n    console.log(\"dragend\")\n    this.props.dragAction(Number(destination), 1, selected);\n    let listItems = document.querySelectorAll('.draggable');\n    [].forEach.call(listItems, function (item) {\n      item.classList.remove('over');\n    });\n    e.target.style.opacity = '1';\n\n  }\n\n  render() {\n    return (\n      <div id=\"outer-container\" className=\"outer-container\" onClick={this.handleClick}\n        onDragStart={(e) => this.handleDragStart(e)}\n        onDragEnter={e => this.onDragEnter(e)}\n        onDragLeave={e => this.onDragLeave(e)}\n        onDragOver={(e) => this.handleDragOver(e, this.props.todos.filteredTodos.length)}\n        onDragEnd={e => this.onDragEnd(e)}\n      >\n        <div id=\"inner-container\" className=\"inner-container\" onClick={this.handleClick}>\n          <AddTodo />\n          <TodoList />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  todos: getFilteredTodos(state.todos, state.filter)\n})\n\nconst mapDispatchToProps = dispatch => ({\n  editTodo: id => dispatch(editTodo(id)),\n  dragAction: (index, method, object) => dispatch(dragAction(index, method, object))\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App)\n","export function notDroppableClassList(id) {\n    const classList = [\"outer-container\", \"todo-header\", \"toggle-all\", \"form-input\", \"form\", \"add-todo\", \"add-todo-sticky\"];\n    for (let i = 0; i < classList.length; i++) {\n        if (classList[i] === id)\n            return true;\n    }\n    return false;\n}\n\n","const todos = (state = [], action) => {\n    switch (action.type) {\n        case 'ADD_TODO':\n            let id = (state.length === 0) ? 0 : action.id;\n            return [\n                ...state, {\n                    id: id,\n                    text: action.text,\n                    completed: false,\n                    editing: false\n                },\n            ]\n        case \"EDIT_TODO\":\n            return state.map(todo =>\n                todo.id === action.id ? { ...todo, editing: !todo.editing } : { ...todo, editing: false }\n            );\n        case \"UPDATE\":\n            let data = [...state];\n            data[action.id].text = action.text;\n            data[action.id].editing = !data[action.id].editing;\n            return data;\n        case 'TOGGLE_TODO':\n            return state.map(todo =>\n                todo.id === action.id ? { ...todo, completed: !todo.completed } : todo\n            )\n        case \"DELETE_TODO\":\n            let newState = [...state];\n            newState = newState.filter(todo => todo.id !== action.id);\n            reorderIds(newState);\n            return newState;\n        case \"TOGGLE_COMPLETED\":\n            let newdata = [...state];\n            newdata[action.id].completed = !newdata[action.id].completed;\n            return newdata;\n\n        case \"DRAG_ACTION\":\n            let newS = [...state];\n            if (action.object !== undefined)\n                newS.splice(action.index, action.method, action.object);\n            else\n                newS.splice(action.index, action.method);\n            reorderIds(newS);\n            return newS;\n        default:\n            return state\n    }\n}\n\nfunction reorderIds(state) {\n    for (let i = 0; i < state.length; i++) {\n        if (state[i].id !== i) state[i].id = i;\n    }\n}\n\nexport default todos","import { filters } from \"../constants/filters\";\n\nconst filter = (state = filters.SHOW_ALL, action) => {\n    switch (action.type) {\n        case 'FILTER_TYPE':\n            return action.filter\n        default:\n            return state\n    }\n}\n\nexport default filter;","import { combineReducers } from 'redux'\nimport todos from './todos'\nimport filter from './filter'\n\nexport default combineReducers({\n    todos,\n    filter\n})","export const loadState = () => {\n  try {\n    const state = localStorage.getItem('state');\n    if (state === null) {\n      return undefined;\n    }\n    return JSON.parse(state);\n  } catch (err) {\n    return undefined;\n  }\n};\n\nexport const saveState = (state) => {\n  try {\n    const serialState = JSON.stringify(state);\n    localStorage.setItem('state', serialState);\n  } catch (err) {\n    console.log(\"Data not saved\");\n  }\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension/developmentOnly\";\nimport rootReducer from \"./reducer\"\nimport { loadState, saveState } from \"./localStorage\";\nimport throttle from 'lodash.throttle';\nimport * as serviceWorker from './serviceWorker';\n\nserviceWorker.register();\n\nconst persistedState = loadState();\nconst store = createStore(rootReducer, persistedState, composeWithDevTools());\n\nstore.subscribe(() => {\n    saveState({\n        todos: store.getState().todos\n    });\n});\n\nstore.subscribe(throttle(() => {\n    saveState({\n        todos: store.getState().todos\n    });\n}, 1000));\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}
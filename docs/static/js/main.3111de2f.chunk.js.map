{"version":3,"sources":["actions/index.js","constants/filters.js","utils/getFilteredTodos.js","components/Hamburger.js","components/SidebarList.js","components/Sidebar.js","components/AddTodo.js","components/Todo.js","components/Checkbox.js","components/EditTodo.js","components/Filters.js","components/filterList.js","components/TodoList.js","utils/itemsCalc.js","App.js","utils/classList.js","reducer/todos.js","reducer/filter.js","reducer/index.js","localStorage.js","serviceWorker.js","index.js"],"names":["editTodo","id","text","type","update","toggleCompleted","filters","getFilteredTodos","todos","filter","filteredTodos","t","completed","Error","Hamburger","onClick","className","SidebarList","showHowToUse","getHowToUse","useState","showHowToUsePage","setshowHowToUsePage","Fragment","e","preventDefault","Sidebar","connect","state","input","dispatch","getSidebarval","showSidebar","count","showBar","setshowBar","undefined","length","stopPropagation","map","todo","editing","style","opacity","toggleShowSidebar","height","onSubmit","event","value","trim","addTodo","handleSubmit","for","class","autoComplete","required","placeholder","ref","node","Todo","onDoubleClick","textDecoration","fontStyle","Checkbox","checked","defaultValue","autoFocus","onBlur","props","active","children","disabled","FilterList","toggleTodo","deleteTodo","completedCount","incompletedCount","overallCompletedCount","overallIncompletedCount","handleClick","draggable","key","itemsCalc","selected","source","destination","App","setState","handleDragStart","target","dataTransfer","setData","dropEffect","data","d","Object","assign","splice","Number","dragAction","onDragEnter","parentElement","classList","contains","add","onDragLeave","remove","handleDragOver","i","notDroppableClassList","onDragEnd","listItems","document","querySelectorAll","forEach","call","item","handleSidebarnav","handleShowHowToUse","hideHowToUse","this","onDragStart","onDragOver","display","flexDirection","flexBasis","justifyContent","fontSize","fontWeight","color","padding","cursor","Component","index","method","object","reorderIds","action","stateNew","newState","newdata","newS","combineReducers","saveState","serialState","JSON","stringify","localStorage","setItem","err","console","log","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","persistedState","getItem","parse","loadState","store","createStore","rootReducer","composeWithDevTools","subscribe","getState","throttle","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.3111de2f.chunk.js","sourcesContent":["export const addTodo = (id, text) => ({\n    type: 'ADD_TODO',\n    id,\n    text\n})\n\nexport const editTodo = (id, text) => ({\n    type: \"EDIT_TODO\",\n    id,\n    text\n})\n\nexport const update = (id, text) => ({\n    type: \"UPDATE\",\n    id,\n    text\n})\n\nexport const deleteTodo = id => ({\n    type: \"DELETE_TODO\",\n    id\n})\n\nexport const filterType = (id, filter) => ({\n    type: 'FILTER_TYPE',\n    id,\n    filter\n})\n\nexport const toggleTodo = id => ({\n    type: 'TOGGLE_TODO',\n    id\n})\n\nexport const toggleCompleted = id => ({\n    type: 'TOGGLE_COMPLETED',\n    id\n})\n\nexport const dragAction = (index, method, object) => ({\n    type: \"DRAG_ACTION\",\n    index,\n    method,\n    object\n})\n\n","export const filters = {\n    SHOW_ALL: 'SHOW_ALL',\n    SHOW_COMPLETED: 'SHOW_COMPLETED',\n    SHOW_ACTIVE: 'SHOW_ACTIVE'\n}","import { filters } from '../constants/filters';\n\nexport const getFilteredTodos = (todos, filter) => {\n    switch (filter) {\n        case filters.SHOW_ALL:\n            return { todos, filteredTodos: [...todos] }\n        case filters.SHOW_COMPLETED:\n            return { todos, filteredTodos: [...todos.filter(t => t.completed)] }\n        case filters.SHOW_ACTIVE:\n            return { todos, filteredTodos: [...todos.filter(t => !t.completed)] }\n        default:\n            throw new Error('Unknown filter: ' + filter)\n    }\n}","import React from 'react';\nimport \"./Hamburger.css\";\n\n\nconst Hamburger = ({ onClick }) => {\n\n    return (\n        <div id=\"hamburger\" className=\"hamburger\" onClick={onClick} >\n            &#9776;\n        </div>\n    );\n}\n\nexport default Hamburger;","import React, { useState } from 'react';\n\nconst SidebarList = ({ showHowToUse, getHowToUse }) => {\n    let [showHowToUsePage, setshowHowToUsePage] = useState(showHowToUse);\n\n    const toggleHowToUse = e => {\n        e.preventDefault();\n        setshowHowToUsePage(!showHowToUsePage);\n        getHowToUse(!showHowToUsePage);\n    }\n    return (\n        <React.Fragment>\n            <div className=\"how-to-use\" onClick={toggleHowToUse}>\n                <div>How to use </div>\n                <div className=\"question-mark\">?</div>\n            </div>\n        </React.Fragment>\n    );\n}\n\nexport default SidebarList;","import React from 'react';\nimport SidebarList from \"./SidebarList\";\nconst Sidebar = ({ onClick, showHowToUse, getHowToUse }) => {\n\n    return (\n        <div id=\"sidebar-menu\" className=\"sidebar-menu\" onClick={onClick}>\n            < div id=\"sidebar-header\" className=\"sidebar-header\" > todos options</div >\n            <div id=\"sidebar-options\" className=\"sidebar-options\">\n                <SidebarList showHowToUse={showHowToUse} getHowToUse={getHowToUse} />\n            </div>\n            <div id=\"sidebar-footer\" className=\"sidebar-footer\"> &#169; Debayan Chatterjee, 2019</div>\n        </div >\n    );\n}\n\nexport default Sidebar;","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { addTodo, toggleCompleted, editTodo } from '../actions';\nimport { getFilteredTodos } from \"../utils/getFilteredTodos\";\nimport Hamburger from \"./Hamburger\";\nimport Sidebar from \"./Sidebar\";\nimport \"../App.css\";\n\nconst AddTodo = ({ dispatch, todos, getSidebarval, showSidebar, getHowToUse, showHowToUse }) => {\n    let input, count = 0;\n    let [showBar, setshowBar] = useState(showSidebar);\n    let id = (todos.todos.length === undefined) ? 0 : todos.todos.length;\n    const handleSubmit = event => {\n        event.preventDefault()\n        if (!input.value.trim()) {\n            return\n        }\n        dispatch(addTodo(id, input.value))\n        input.value = ''\n        id = 0;\n    }\n    const handleClick = e => {\n        e.preventDefault();\n        todos.todos.map(todo => (todo.completed ? count++ : \"\"));\n        if (count < todos.todos.length) {\n            todos.todos.map(todo => {\n                if (!todo.completed) {\n                    return dispatch(toggleCompleted(todo.id))\n                }\n                return \"\";\n            })\n        }\n        if (count === todos.todos.length) {\n            todos.todos.map(todo => {\n                if (todo.completed) {\n                    return dispatch(toggleCompleted(todo.id))\n                }\n                return \"\";\n            })\n        }\n    }\n\n    const handleClickNoEdit = e => {\n        e.preventDefault();\n        if (showSidebar) {\n            setshowBar(!showBar);\n            getSidebarval(!showBar);\n        }\n        todos.todos.map(todo => (todo.editing ? dispatch(editTodo(todo.id)) : null));\n    }\n\n    const toggleShowSidebar = e => {\n        e.preventDefault();\n        setshowBar(!showBar);\n        getSidebarval(!showBar);\n    }\n\n    const onClickOpenSidebar = e => {\n        e.stopPropagation();\n    }\n\n    return (\n        <>\n            {showSidebar ? <Sidebar onClick={onClickOpenSidebar} showHowToUse={showHowToUse} getHowToUse={getHowToUse} /> : null}\n            <div id=\"add-todo-sticky\" className=\"add-todo-sticky\" onClick={handleClickNoEdit} style={{ opacity: showSidebar ? 0.4 : 1 }}>\n                <div id=\"main-header\" className=\"main-header\" >\n                    {!showSidebar ? <Hamburger onClick={e => toggleShowSidebar(e)} /> : <div className=\"placeholder-div\"></div>}\n                    <div id=\"todo-header\" className=\"todo-header\">todos</div>\n                </div>\n                <div id=\"add-todo\" className=\"add-todo\" style={{ height: \"50px\" }}>\n                    <button id=\"toggle-all\" className=\"toggle-all\" onClick={handleClick}>&#8250;</button>\n                    <form id=\"form\" className=\"form\" onSubmit={event => handleSubmit(event)} >\n                        <label for=\"form-input\" class=\"label-hidden\">What needs to be done</label>\n                        <input\n                            autoComplete=\"off\"\n                            id=\"form-input\"\n                            className=\"input-no-style input-override form\"\n                            required\n                            type=\"text\"\n                            placeholder=\"What needs to be done\"\n                            ref={node => (input = node)} />\n                    </form>\n                </div>\n            </div >\n        </>\n    )\n}\n\nconst mapStateToProps = state => ({\n    todos: getFilteredTodos(state.todos, state.filter)\n})\n\nexport default connect(mapStateToProps)(AddTodo)","import React from 'react'\n\nconst Todo = ({ onDoubleClick, onClick, completed, text, id }) => (\n    <li\n        id={id}\n        className=\"input-no-style li-style\"\n        onDoubleClick={onDoubleClick}\n        onClick={onClick}\n        style={{ textDecoration: completed ? 'line-through' : 'none', fontStyle: completed ? 'italic' : 'normal' }}\n    >\n        {text}\n    </li>\n)\n\nexport default Todo","import React from 'react'\nimport \"./Checkbox.css\";\n\nconst Checkbox = ({ onClick, checked }) => (\n    <label className=\"container\">\n        <label for=\"checkbox\" className=\"label-hidden\">Checkbox</label>\n        <input type=\"checkbox\" onClick={onClick} checked={checked} />\n        <span className=\"checkmark\"></span>\n    </label>\n)\n\nexport default Checkbox;","import React from 'react'\nimport { connect } from 'react-redux'\nimport { update } from '../actions'\n\nconst EditTodo = ({ dispatch, id, placeholder }) => {\n    let input = placeholder;\n    const handleSubmit = e => {\n        e.preventDefault();\n        if (!input.value.trim()) {\n            return\n        }\n        dispatch(update(id, input.value))\n        input.value = ''\n    }\n\n    const handleOnBlur = e => {\n        if (!input.value.trim()) {\n            return\n        }\n        dispatch(update(id, input.value))\n        input.value = ''\n    }\n\n    return (\n        <React.Fragment>\n            <form className=\"form\" onSubmit={handleSubmit}>\n                <label for=\"id\" className=\"label-hidden\">Edit</label>\n                <input\n                    id={id}\n                    className=\"input-no-style edit-input-override\"\n                    required\n                    type=\"text\"\n                    defaultValue={input}\n                    autoFocus=\"autofocus\"\n                    ref={node => (input = node)}\n                    onBlur={handleOnBlur}\n                />\n            </form>\n        </React.Fragment>\n    )\n}\n\n\nexport default connect()(EditTodo)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { filterType } from '../actions'\n\nconst Filters = ({ active, children, onClick }) => {\n    return (\n        <button id=\"filters-btn\" className=\"filters-btn\"\n            onClick={onClick}\n            disabled={active}\n        >\n            {children}\n        </button>\n    )\n}\n\nconst mapStateToProps = (state, props) => ({\n    active: props.filter === state.filter\n})\n\nconst mapDispatchToProps = (dispatch, props) => ({\n    onClick: () => dispatch(filterType(props.id, props.filter))\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Filters)","import React from 'react'\nimport Filters from './Filters'\nimport { filters } from \"../constants/filters\"\n\nconst FilterList = () => (\n    <div id=\"filters\" className=\"filters\">\n        <Filters filter={filters.SHOW_ALL}>All</Filters>\n        <Filters filter={filters.SHOW_ACTIVE}>Active</Filters>\n        <Filters filter={filters.SHOW_COMPLETED}>Completed</Filters>\n    </div>\n)\n\nexport default FilterList;","import { connect } from 'react-redux'\nimport { toggleTodo, deleteTodo, editTodo, update } from '../actions'\nimport { getFilteredTodos } from \"../utils/getFilteredTodos\";\nimport React from 'react';\nimport Todo from './Todo';\nimport Checkbox from \"./Checkbox\";\nimport \"./TodoList.css\";\nimport EditTodo from \"./EditTodo\"\nimport FilterList from './filterList';\nimport itemsCalc from \"../utils/itemsCalc\";\n\nconst TodoList = ({ todos, toggleTodo, deleteTodo, editTodo, getSidebarval, showSidebar }) => {\n    let completedCount = 0, incompletedCount = 0, overallCompletedCount = 0, overallIncompletedCount = 0;\n    todos.filteredTodos.map(todo => ((todo.completed) ? completedCount++ : incompletedCount++));\n    todos.todos.map(todo => ((todo.completed) ? overallCompletedCount++ : overallIncompletedCount++));\n\n    const handleClick = e => {\n        todos.filteredTodos.map(todo => (todo.editing ? editTodo(todo.id) : null));\n    }\n\n    const handleCheckboxClick = id => {\n        todos.filteredTodos.map(todo => {\n            if (id === todo.id) toggleTodo(todo.id);\n            if (todo.editing) editTodo(todo.id);\n            return null;\n        });\n    }\n\n    const handleTodoClick = id => {\n        todos.filteredTodos.map(todo => {\n            if (id !== todo.id) {\n                if (todo.editing) editTodo(todo.id);\n            }\n            return null;\n        });\n    }\n    const handleSidebar = () => {\n        if (showSidebar)\n            getSidebarval(!showSidebar);\n    }\n    return (\n        <div className=\"todolist-container\" onClick={handleSidebar} style={{ opacity: showSidebar ? 0.4 : 1 }}>\n            {todos.todos.length ?\n                <React.Fragment>\n                    <ul id=\"ul\" className=\"ul\" onClick={handleClick}>\n                        {todos.filteredTodos.map(todo => (\n                            <div\n                                id={todo.id}\n                                text={todo.text}\n                                className=\"todolist-items add-todo spanbutton draggable\"\n                                onClick={handleClick}\n                                draggable={!showSidebar}\n                            >\n                                <Checkbox id={todo.id} checked={todo.completed} onClick={() => handleCheckboxClick(todo.id)} />\n                                {todo.editing !== true ?\n                                    <span className=\"todo-edit-range\">\n                                        <Todo id={todo.id} key={todo.id} {...todo}\n                                            onDoubleClick={() => editTodo(todo.id)}\n                                            onClick={() => handleTodoClick(todo.id)}\n                                        />\n                                        <button className=\"btn\" onClick={() => deleteTodo(todo.id)}>&#10005;</button>\n                                    </span>\n                                    : <EditTodo key={todo.id} id={todo.id} placeholder={todo.text} />}\n                            </div>\n                        ))\n                        }\n                    </ul >\n                    <div id=\"footer\" className=\"add-todo footer-font footer-fix\" onClick={handleClick}>\n                        {itemsCalc(overallCompletedCount, completedCount, incompletedCount, todos.todos.length)}\n                        <FilterList />\n                        {completedCount !== 0 ?\n                            (incompletedCount === 0 ?\n                                <div id=\"clear-completed\" className=\"clear-completed\"\n                                    onClick={() => (todos.filteredTodos.map(todo => (deleteTodo(todo.id))))}>\n                                    Clear Completed</div>\n                                : <div id=\"clear-completed\" className=\"clear-completed\"\n                                    onClick={() => (todos.filteredTodos.map(todo => (todo.completed ? deleteTodo(todo.id) : null)))}>\n                                    Clear Completed</div>)\n                            : null}\n                    </div>\n                </React.Fragment> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    todos: getFilteredTodos(state.todos, state.filter)\n})\n\nconst mapDispatchToProps = dispatch => ({\n    toggleTodo: id => dispatch(toggleTodo(id)),\n    deleteTodo: id => dispatch(deleteTodo(id)),\n    editTodo: id => dispatch(editTodo(id)),\n    update: (id, text) => dispatch(update(id, text))\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(TodoList)","import React from \"react\";\nexport default function itemsCalc(overallCompletedCount, completedCount, incompletedCount, length) {\n    return (\n        overallCompletedCount < length ?\n            (incompletedCount ?\n                <div id=\"completed-count\" className=\"completed-count\" >\n                    {incompletedCount} {incompletedCount > 1 ? \" items left\" : \" item left\"}\n                </div>\n                : <div id=\"completed-count\" className=\"completed-count\" >\n                    {completedCount} {completedCount > 1 ? \" items completed\" : \" item completed\"}\n                </div>)\n            : (completedCount ?\n                (completedCount === overallCompletedCount ?\n                    <div id=\"completed-count\" className=\"completed-count\" >All items completed</div>\n                    : <div id=\"completed-count\" className=\"completed-count\" >\n                        {completedCount} {completedCount > 1 ? \" items completed\" : \" item completed\"}\n                    </div>)\n                : <div id=\"completed-count\" className=\"completed-count\" >\n                    {incompletedCount} {incompletedCount > 1 ? \" items left\" : \" item left\"}\n                </div>)\n    )\n}","import React, { Component } from \"react\";\nimport AddTodo from \"./components/AddTodo\";\nimport TodoList from \"./components/TodoList\";\nimport { connect } from 'react-redux'\nimport { editTodo, dragAction } from './actions';\nimport { notDroppableClassList } from \"./utils/classList\";\nimport { getFilteredTodos } from \"./utils/getFilteredTodos\";\n\nlet selected = null, source = -1, destination = -1;\nclass App extends Component {\n\n  state = {\n    showSidebar: false,\n    showHowToUse: false\n  }\n\n  handleClick = e => {\n    let { todos, editTodo } = this.props;\n    if (this.state.showSidebar) {\n      this.setState({\n        showSidebar: !this.state.showSidebar\n      })\n    }\n    todos.filteredTodos.map(todo => (todo.editing ? editTodo(todo.id) : null));\n  }\n\n  handleDragStart = (e) => {\n    source = e.target.id;\n    destination = e.target.id;\n    e.dataTransfer.setData(\"text\", e.target.id);\n    e.dataTransfer.dropEffect = \"move\";\n    let data = this.props.todos.filteredTodos.map(d => d);\n    selected = Object.assign({}, data.splice(Number(source), 1)[0]);\n    data.splice(Number(source), 0, selected);\n    this.props.dragAction(Number(source), 1, selected);\n  }\n\n  onDragEnter = (e) => {\n    if (e.target.parentElement.parentElement.classList.contains(\"draggable\")) {\n      e.target.parentElement.parentElement.classList.add('over');\n    }\n  }\n\n  onDragLeave = (e) => {\n    e.stopPropagation();\n    if (e.target.parentElement.parentElement.classList.contains(\"draggable\"))\n      e.target.parentElement.parentElement.classList.remove('over');\n  }\n\n  handleDragOver = (e, length) => {\n    e.preventDefault();\n    e.dataTransfer.dropEffect = \"move\";\n    if (e.target.id !== destination) {\n      if (!notDroppableClassList(e.target.id)) {\n        this.props.dragAction(Number(destination), 1);\n        if (e.target.id !== \"ul\") {\n          destination = e.target.id;\n          this.props.dragAction(Number(destination), 0, selected);\n        }\n        else {\n          destination = length - 1;\n          this.props.dragAction(destination, 0, selected);\n        }\n      }\n    }\n  }\n\n  onDragEnd = e => {\n    this.props.dragAction(Number(destination), 1, selected);\n    let listItems = document.querySelectorAll('.draggable');\n    [].forEach.call(listItems, function (item) {\n      item.classList.remove('over');\n    });\n  }\n  handleSidebarnav = (e) => {\n    if (this.state.showHowToUse) {\n      this.setState({\n        showHowToUse: !this.state.showHowToUse\n      })\n    }\n    this.setState({\n      showSidebar: e\n    })\n  }\n\n  handleShowHowToUse = e => {\n    this.setState({\n      showHowToUse: e,\n      showSidebar: !this.state.showSidebar\n    })\n  }\n\n  hideHowToUse = e => {\n    this.setState({\n      showHowToUse: !this.state.showHowToUse\n    })\n  }\n  render() {\n    return (\n      <div id=\"outer-container\" className=\"outer-container\" onClick={this.handleClick}\n        onDragStart={(e) => this.handleDragStart(e)}\n        onDragEnter={e => this.onDragEnter(e)}\n        onDragLeave={e => this.onDragLeave(e)}\n        onDragOver={(e) => this.handleDragOver(e, this.props.todos.filteredTodos.length)}\n        onDragEnd={e => this.onDragEnd(e)}\n      >\n        <div id=\"inner-container\" className=\"inner-container\" onClick={this.handleClick}>\n          <AddTodo\n            getSidebarval={(e) => this.handleSidebarnav(e)}\n            showSidebar={this.state.showSidebar}\n            showHowToUse={this.state.showHowToUse}\n            getHowToUse={e => this.handleShowHowToUse(e)}\n          />\n          <TodoList\n            getSidebarval={(d) => this.handleSidebarnav(d)}\n            showSidebar={this.state.showSidebar}\n          />\n          {this.state.showHowToUse &&\n            <div className=\"how-to-use-container\">\n              <div className=\"how-to-use-header\">\n                <div\n                  className=\"hamburger hb2\"\n                  onClick={e => this.handleSidebarnav(e)}>&#9776;\n                </div>\n                <div style={{ display: \"flex\", flexDirection: \"row\", flexBasis: \"90%\", justifyContent: \"center\" }}>\n                  <div style={{\n                    fontSize: \"30px\", fontWeight: \"bold\", color: \"white\", padding: \"10px\", cursor: \"default\"\n                  }}>How to use</div>\n                  <div className=\"question-mark q-mark2\">?</div>\n                </div>\n                <button className=\"btn btn2\" onClick={e => this.hideHowToUse(e)}>&#10005;</button>\n              </div>\n              <div className=\"how-to-use-content\">content</div>\n              <button id=\"filters-btn\" className=\"filters-btn close-btn\"\n                onClick={e => this.hideHowToUse(e)}\n              >Close</button>\n            </div>\n          }\n        </div>\n      </div >\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  todos: getFilteredTodos(state.todos, state.filter)\n})\n\nconst mapDispatchToProps = dispatch => ({\n  editTodo: id => dispatch(editTodo(id)),\n  dragAction: (index, method, object) => dispatch(dragAction(index, method, object))\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App)\n","export function notDroppableClassList(id) {\n    const classList = [\"outer-container\", \"todo-header\", \"toggle-all\", \"form-input\", \"form\", \"add-todo\", \"add-todo-sticky\", \"footer\", \"completed-count\", \"clear-completed\", \"filters\", \"filters-btn\"];\n    for (let i = 0; i < classList.length; i++) {\n        if (classList[i] === id)\n            return true;\n    }\n    return false;\n}\n\n","const todos = (state = [], action) => {\n    switch (action.type) {\n        case 'ADD_TODO':\n            let id = (state.length === 0) ? 0 : action.id;\n            let stateNew = [\n                {\n                    id: id,\n                    text: action.text,\n                    completed: false,\n                    editing: false\n                },\n                ...state\n            ];\n            reorderIds(stateNew);\n            return stateNew;\n        case \"EDIT_TODO\":\n            return state.map(todo =>\n                todo.id === action.id ? { ...todo, editing: !todo.editing } : { ...todo, editing: false }\n            );\n        case \"UPDATE\":\n            let data = [...state];\n            data[action.id].text = action.text;\n            data[action.id].editing = !data[action.id].editing;\n            return data;\n        case 'TOGGLE_TODO':\n            return state.map(todo =>\n                todo.id === action.id ? { ...todo, completed: !todo.completed } : todo\n            )\n        case \"DELETE_TODO\":\n            let newState = [...state];\n            newState = newState.filter(todo => todo.id !== action.id);\n            reorderIds(newState);\n            return newState;\n        case \"TOGGLE_COMPLETED\":\n            let newdata = [...state];\n            newdata[action.id].completed = !newdata[action.id].completed;\n            return newdata;\n\n        case \"DRAG_ACTION\":\n            let newS = [...state];\n            if (action.object !== undefined)\n                newS.splice(action.index, action.method, action.object);\n            else\n                newS.splice(action.index, action.method);\n            reorderIds(newS);\n            return newS;\n        default:\n            return state\n    }\n}\n\nfunction reorderIds(state) {\n    for (let i = 0; i < state.length; i++) {\n        if (state[i].id !== i) state[i].id = i;\n    }\n}\n\nexport default todos","import { filters } from \"../constants/filters\";\n\nconst filter = (state = filters.SHOW_ALL, action) => {\n    switch (action.type) {\n        case 'FILTER_TYPE':\n            return action.filter\n        default:\n            return state\n    }\n}\n\nexport default filter;","import { combineReducers } from 'redux'\nimport todos from './todos'\nimport filter from './filter'\n\nexport default combineReducers({\n    todos,\n    filter\n})","export const loadState = () => {\n  try {\n    const state = localStorage.getItem('state');\n    if (state === null) {\n      return undefined;\n    }\n    return JSON.parse(state);\n  } catch (err) {\n    return undefined;\n  }\n};\n\nexport const saveState = (state) => {\n  try {\n    const serialState = JSON.stringify(state);\n    localStorage.setItem('state', serialState);\n  } catch (err) {\n    console.log(\"Data not saved\");\n  }\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension/developmentOnly\";\nimport rootReducer from \"./reducer\"\nimport { loadState, saveState } from \"./localStorage\";\nimport throttle from 'lodash.throttle';\nimport * as serviceWorker from './serviceWorker';\n\nserviceWorker.register();\n\nconst persistedState = loadState();\nconst store = createStore(rootReducer, persistedState, composeWithDevTools());\n\nstore.subscribe(() => {\n    saveState({\n        todos: store.getState().todos\n    });\n});\n\nstore.subscribe(throttle(() => {\n    saveState({\n        todos: store.getState().todos\n    });\n}, 1000));\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}
{"version":3,"sources":["actions/index.js","constants/filters.js","components/getFilteredTodos.js","components/AddTodo.js","components/Todo.js","components/Checkbox.js","components/EditTodo.js","components/Filters.js","components/filterList.js","components/TodoList.js","App.js","reducer/todos.js","reducer/filter.js","reducer/index.js","localStorage.js","serviceWorker.js","index.js"],"names":["editTodo","id","text","type","update","toggleCompleted","filters","getFilteredTodos","todos","filter","filteredTodos","t","completed","Error","connect","state","input","dispatch","count","undefined","length","className","onClick","e","preventDefault","map","todo","editing","onSubmit","event","value","trim","addTodo","handleSubmit","required","placeholder","ref","node","Todo","style","textDecoration","Checkbox","checked","Fragment","defaultValue","onBlur","props","active","children","disabled","FilterList","toggleTodo","deleteTodo","completedCount","data","incompletedCount","handleClick","key","App","this","Component","action","newState","i","newdata","combineReducers","saveState","serialState","JSON","stringify","localStorage","setItem","err","console","log","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","persistedState","getItem","parse","loadState","store","createStore","rootReducer","composeWithDevTools","subscribe","getState","throttle","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fc5afb0f.chunk.js","sourcesContent":["export const addTodo = (id, text) => ({\n    type: 'ADD_TODO',\n    id,\n    text\n})\n\nexport const editTodo = (id, text) => ({\n    type: \"EDIT_TODO\",\n    id,\n    text\n})\n\nexport const update = (id, text) => ({\n    type: \"UPDATE\",\n    id,\n    text\n})\n\nexport const deleteTodo = id => ({\n    type: \"DELETE_TODO\",\n    id\n})\n\nexport const filterType = (id, filter) => ({\n    type: 'FILTER_TYPE',\n    id,\n    filter\n})\n\nexport const toggleTodo = id => ({\n    type: 'TOGGLE_TODO',\n    id\n})\n\nexport const toggleCompleted = id => ({\n    type: 'TOGGLE_COMPLETED',\n    id\n})\n\n","export const filters = {\n    SHOW_ALL: 'SHOW_ALL',\n    SHOW_COMPLETED: 'SHOW_COMPLETED',\n    SHOW_ACTIVE: 'SHOW_ACTIVE'\n}","import { filters } from '../constants/filters';\n\nexport const getFilteredTodos = (todos, filter) => {\n    switch (filter) {\n        case filters.SHOW_ALL:\n            return { todos, filteredTodos: [...todos] }\n        case filters.SHOW_COMPLETED:\n            return { todos, filteredTodos: [...todos.filter(t => t.completed)] }\n        case filters.SHOW_ACTIVE:\n            return { todos, filteredTodos: [...todos.filter(t => !t.completed)] }\n        default:\n            throw new Error('Unknown filter: ' + filter)\n    }\n}","import React from 'react'\nimport { connect } from 'react-redux'\nimport { addTodo, toggleCompleted, editTodo } from '../actions';\nimport { getFilteredTodos } from \"./getFilteredTodos\";\nimport \"../App.css\";\n\nconst AddTodo = ({ dispatch, todos }) => {\n    let input, count = 0;\n    let id = (todos.todos.length === undefined) ? 0 : todos.todos.length;\n    const handleSubmit = event => {\n        event.preventDefault()\n        if (!input.value.trim()) {\n            return\n        }\n        dispatch(addTodo(id, input.value))\n        input.value = ''\n        id = 0;\n    }\n    const handleClick = e => {\n        e.preventDefault();\n        todos.todos.map(todo => (todo.completed ? count++ : \"\"));\n        if (count < todos.todos.length) {\n            todos.todos.map(todo => {\n                if (!todo.completed) {\n                    return dispatch(toggleCompleted(todo.id))\n                }\n                return \"\";\n            })\n        }\n        if (count === todos.todos.length) {\n            todos.todos.map(todo => {\n                if (todo.completed) {\n                    return dispatch(toggleCompleted(todo.id))\n                }\n                return \"\";\n            })\n        }\n    }\n\n    const handleClickNoEdit = e => {\n        e.preventDefault();\n        todos.todos.map(todo => (todo.editing ? dispatch(editTodo(todo.id)) : null));\n    }\n\n    return (\n        <div className=\"add-todo-sticky\" onClick={handleClickNoEdit}>\n            <h1>todos</h1>\n            <div className=\"add-todo\">\n                <button className=\"toggle-all\" onClick={handleClick}>&#8250;</button>\n                <form className=\"form\" onSubmit={event => handleSubmit(event)}>\n                    <input\n                        className=\"input-no-style input-override form\"\n                        required\n                        type=\"text\"\n                        placeholder=\"What needs to be done\"\n                        ref={node => (input = node)} />\n                </form>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    todos: getFilteredTodos(state.todos, state.filter)\n})\n\nexport default connect(mapStateToProps)(AddTodo)","import React from 'react'\n\nconst Todo = ({ onClick, completed, text }) => (\n    <li\n        className=\"input-no-style li-style\"\n        onClick={onClick}\n        style={{ textDecoration: completed ? 'line-through' : 'none' }}\n    >\n        {text}\n    </li>\n)\n\nexport default Todo","import React from 'react'\nimport \"./Checkbox.css\";\n\nconst Checkbox = ({ onClick, checked }) => (\n    <label className=\"container\">\n        <input type=\"checkbox\" onClick={onClick} checked={checked} />\n        <span className=\"checkmark\"></span>\n    </label>\n)\n\nexport default Checkbox;","import React from 'react'\nimport { connect } from 'react-redux'\nimport { update } from '../actions'\n\nconst EditTodo = ({ dispatch, id, placeholder }) => {\n    let input = placeholder;\n    const handleSubmit = e => {\n        e.preventDefault();\n        if (!input.value.trim()) {\n            return\n        }\n        dispatch(update(id, input.value))\n        input.value = ''\n    }\n\n    const handleOnBlur = e => {\n        if (!input.value.trim()) {\n            return\n        }\n        dispatch(update(id, input.value))\n        input.value = ''\n    }\n\n    return (\n        <React.Fragment>\n            <form className=\"form\" onSubmit={handleSubmit}>\n                <input\n                    className=\"input-no-style edit-input-override\"\n                    required\n                    type=\"text\"\n                    defaultValue={input}\n                    ref={node => (input = node)}\n                    onBlur={handleOnBlur}\n                />\n            </form>\n        </React.Fragment>\n    )\n}\n\n\nexport default connect()(EditTodo)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { filterType } from '../actions'\n\nconst Filters = ({ active, children, onClick }) => {\n    return (\n        <button className=\"filters-btn\"\n            onClick={onClick}\n            disabled={active}\n        >\n            {children}\n        </button>\n    )\n}\n\nconst mapStateToProps = (state, props) => ({\n    active: props.filter === state.filter\n})\n\nconst mapDispatchToProps = (dispatch, props) => ({\n    onClick: () => dispatch(filterType(props.id, props.filter))\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Filters)","import React from 'react'\nimport Filters from './Filters'\nimport { filters } from \"../constants/filters\"\n\nconst FilterList = () => (\n    <div className=\"filters\">\n        <Filters filter={filters.SHOW_ALL}>All</Filters>\n        <Filters filter={filters.SHOW_ACTIVE}>Active</Filters>\n        <Filters filter={filters.SHOW_COMPLETED}>Completed</Filters>\n    </div>\n)\n\nexport default FilterList;","import { connect } from 'react-redux'\nimport { toggleTodo, deleteTodo, editTodo, update } from '../actions'\nimport { getFilteredTodos } from \"./getFilteredTodos\";\nimport React from 'react';\nimport Todo from './Todo';\nimport Checkbox from \"./Checkbox\";\nimport \"./TodoList.css\";\nimport EditTodo from \"./EditTodo\"\nimport FilterList from './filterList';\n\nconst TodoList = ({ todos, toggleTodo, deleteTodo, editTodo, data, props }) => {\n    let completedCount = 0, incompletedCount = 0;\n    todos.filteredTodos.map(todo => ((!todo.completed) ? completedCount++ : incompletedCount++));\n\n    const handleClick = e => {\n        todos.filteredTodos.map(todo => (todo.editing ? editTodo(todo.id) : null));\n    }\n\n    const handleCheckboxClick = id => {\n        todos.filteredTodos.map(todo => {\n            if (id === todo.id) toggleTodo(todo.id);\n            if (todo.editing) editTodo(todo.id);\n            return null;\n        });\n    }\n\n    return (\n        <div className=\"todolist-container\">\n            {todos.todos.length ?\n                <React.Fragment>\n                    <ul onClick={handleClick}>\n                        {todos.filteredTodos.map(todo => (\n                            <span className=\"todolist-items add-todo spanbutton\" onClick={handleClick}>\n                                <Checkbox id={todo.id} checked={todo.completed} onClick={() => handleCheckboxClick(todo.id)} />\n                                {todo.editing !== true ?\n                                    <span className=\"todo-edit-range\">\n                                        <Todo key={todo.id} {...todo}\n                                            onClick={() => editTodo(todo.id)}\n                                        />\n                                        <button className=\"btn\" onClick={() => deleteTodo(todo.id)}>&#10005;</button>\n                                    </span>\n                                    : <EditTodo key={todo.id} id={todo.id} placeholder={todo.text} />}\n                            </span>\n                        ))\n                        }\n                    </ul >\n                    <div className=\"add-todo footer-font footer-fix\" onClick={handleClick}>\n                        <div className=\"completed-count\" > {completedCount} {completedCount > 1 ? \" items left\" : \" item left\"}</div>\n                        <FilterList />\n                        {incompletedCount !== 0 ?\n                            (completedCount === 0 ?\n                                <div className=\"clear-completed\"\n                                    onClick={() => (todos.filteredTodos.map(todo => (deleteTodo(todo.id))))}>\n                                    Clear Completed</div>\n                                : <div className=\"clear-completed\"\n                                    onClick={() => (todos.filteredTodos.map(todo => (todo.completed ? deleteTodo(todo.id) : null)))}>\n                                    Clear Completed</div>)\n                            : null}\n                    </div>\n                </React.Fragment> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    todos: getFilteredTodos(state.todos, state.filter)\n})\n\nconst mapDispatchToProps = dispatch => ({\n    toggleTodo: id => dispatch(toggleTodo(id)),\n    deleteTodo: id => dispatch(deleteTodo(id)),\n    editTodo: id => dispatch(editTodo(id)),\n    update: (id, text) => dispatch(update(id, text))\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(TodoList)","import React, { Component } from \"react\";\nimport AddTodo from \"./components/AddTodo\";\nimport TodoList from \"./components/TodoList\";\nimport { connect } from 'react-redux'\nimport { editTodo } from './actions'\nimport { getFilteredTodos } from \"./components/getFilteredTodos\";\nclass App extends Component {\n\n  handleClick = e => {\n    let { todos, editTodo } = this.props;\n    todos.filteredTodos.map(todo => (todo.editing ? editTodo(todo.id) : null));\n  }\n\n  render() {\n    return (\n      <div className=\"outer-container\" onClick={this.handleClick}>\n        <div className=\"inner-container\" onClick={this.handleClick}>\n          <AddTodo />\n          <TodoList />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  todos: getFilteredTodos(state.todos, state.filter)\n})\n\nconst mapDispatchToProps = dispatch => ({\n  editTodo: id => dispatch(editTodo(id))\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App)\n","const todos = (state = [], action) => {\n    switch (action.type) {\n        case 'ADD_TODO':\n            let id = (state.length === 0) ? 0 : action.id;\n            return [\n                ...state, {\n                    id: id,\n                    text: action.text,\n                    completed: false,\n                    editing: false\n                },\n            ]\n        case \"EDIT_TODO\":\n            return state.map(todo =>\n                todo.id === action.id ? { ...todo, editing: !todo.editing } : { ...todo, editing: false }\n            );\n        case \"UPDATE\":\n            let data = [...state];\n            data[action.id].text = action.text;\n            data[action.id].editing = !data[action.id].editing;\n            return data;\n        case 'TOGGLE_TODO':\n            return state.map(todo =>\n                todo.id === action.id ? { ...todo, completed: !todo.completed } : todo\n            )\n        case \"DELETE_TODO\":\n            let newState = [...state];\n            newState = newState.filter(todo => todo.id !== action.id);\n            for (let i = 0; i < newState.length; i++) {\n                if (newState[i].id !== i) newState[i].id = i;\n            }\n            return newState;\n        case \"TOGGLE_COMPLETED\":\n            let newdata = [...state];\n            newdata[action.id].completed = !newdata[action.id].completed;\n            return newdata;\n        default:\n            return state\n    }\n}\n\nexport default todos","import { filters } from \"../constants/filters\";\n\nconst filter = (state = filters.SHOW_ALL, action) => {\n    switch (action.type) {\n        case 'FILTER_TYPE':\n            return action.filter\n        default:\n            return state\n    }\n}\n\nexport default filter;","import { combineReducers } from 'redux'\nimport todos from './todos'\nimport filter from './filter'\n\nexport default combineReducers({\n    todos,\n    filter\n})","export const loadState = () => {\n  try {\n    const state = localStorage.getItem('state');\n    if (state === null) {\n      return undefined;\n    }\n    return JSON.parse(state);\n  } catch (err) {\n    return undefined;\n  }\n};\n\nexport const saveState = (state) => {\n  try {\n    const serialState = JSON.stringify(state);\n    localStorage.setItem('state', serialState);\n  } catch (err) {\n    console.log(\"Data not saved\");\n  }\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension/developmentOnly\";\nimport rootReducer from \"./reducer\"\nimport { loadState, saveState } from \"./localStorage\";\nimport throttle from 'lodash.throttle';\nimport * as serviceWorker from './serviceWorker';\n\nserviceWorker.register();\n\nconst persistedState = loadState();\nconst store = createStore(rootReducer, persistedState, composeWithDevTools());\n\nstore.subscribe(() => {\n    saveState({\n        todos: store.getState().todos\n    });\n});\n\nstore.subscribe(throttle(() => {\n    saveState({\n        todos: store.getState().todos\n    });\n}, 1000));\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}